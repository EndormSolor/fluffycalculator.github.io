{"version":3,"sources":["calculators/main.js","components/Daily/Box.tsx","calculators/daily.ts","components/utils/Button.tsx","components/utils/Input.tsx","components/utils/Label.tsx","components/Daily/Filter.tsx","components/Daily/Context.tsx","components/Daily/UniverseSwitch.tsx","components/Daily/Daily.tsx","calculators/fluffy.ts","components/Fluffy/Context.tsx","components/Fluffy/InputSection.tsx","components/Fluffy/RunTimeTable.tsx","components/Fluffy/Stats.tsx","components/Fluffy/UniverseSwitch.tsx","components/Fluffy/Template.tsx","components/Fluffy/Fluffy.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["dailyModifiers","minDamage","description","str","prettify","this","getMult","getWeight","minMaxStep","chance","maxDamage","plague","stacks","count","Math","ceil","sqrt","icon","incompatible","stackDesc","weakness","large","dedication","famine","badStrength","badHealth","badMapStrength","badMapHealth","crits","trimpCritChanceUp","trimpCritChanceDown","bogged","dysfunctional","oddTrimpNerf","evenTrimpBuff","karma","window","daily_universe","getMaxStacks","floor","toxic","realStrength","pow","bloodthirst","getFreq","freq","max","text","next","iconOnEnemy","explosive","mult","slippery","rampage","mutimps","size","getMaxCellNum","empower","stacksToAdd","worldStacksOnly","pressure","round","timePerStack","mirrored","reflectChance","getReflectChance","toString","testWeights","min","results","x","result","push","console","log","reflectDamage","attack","random","metallicThumb","hemmorrhage","res","getResources","length","charAt","toUpperCase","slice","strength","parseInt","blockU1","number","numberTmp","prettifySub","toExponential","base","game","options","menu","standardNotation","enabled","logBase","global","logNotBase","exponent","suffices","suffix","suf2","parseFloat","replace","toFixed","isRewardActive","reward","universe","evolution","level","boughtEarly","minus","WeekBox","className","clsx","baseBox","Box","object","useState","expanded","setExpanded","value","date","preview","tier","seed","mods","undefined","onClick","id","String","join","role","title","Object","keys","map","i","makeDaily","times","returnable","todayOfWeek","getDailyTimeString","z","dayIndex","lastWeek","blank","dailyObj","getDailyChallenge","dailyValue","getDailyHeliumValueDaily","countDailyWeightDaily","getPrettyTimeString","reduce","prev","curr","hasOwnProperty","findColor","lastSeed","tiers","add","getDayOfWeek","today","Date","setUTCDate","getUTCDate","getUTCDay","year","getUTCFullYear","month","getUTCMonth","day","seedStr","getRandomIntSeeded","minIncl","maxExcl","toReturn","sin","seededRandom","everythingInArrayGreaterEqual","smaller","bigger","dateSeed","Number","weightTarget","modifierList","totalChance","dailyObject","item","chanceMod","currentWeight","maxLoops","sizeCount","sizeTarget","mainLoop","maxZLoops","firstChoice","selectedIndex","roll","checkedTotal","y","selectedMod","modObj","modWeight","modSize","splice","incompatibleIndex","indexOf","daily","weight","maybeMakeDaily","force","newestSeed","dailies","Button","label","variant","type","Input","onChange","defaultValue","disabled","MemoInput","React","memo","Label","children","filterTypes","toMatch","FilterBox","updateDailiesFiltered","useContext","DailyContext","setEnabled","Filter","showFilter","setShowFilter","flipAll","setFlipAll","filter","idx","e","target","createContext","DailyProvider","setDailies","Provider","updateDailies","goodMods","matched","forEach","document","getElementById","style","visibility","forceDailies","UniverseSwitch","handleClick","clickedNumber","days","Daily","extend","require","fluffyInstance","string","name","firstLevel","expInLevel","iceBonus","expBonus","exp","purchasedFluffyPrestigeBonus","purchasedFluffyExpBonus","zoneYouPortal","dailyBonus","heirloomBonus","graphNextIce","spiresCompleted","instantUpdating","minutesPerRun","currentExp","traps","portal","save","fluffyExp","fluffyExp2","fluffyPrestige","fluffyPrestige2","lastPortal","lastRadonPortal","bestFluffyExp","zone","displayData","xpPerRun","currentZone","table","percentToLevel","bonesToLevel","XPhr","atMaxEvo","getLevel","getFirstLevel","removeExp","getExpBonus","num","getExpGrowth","owned","getUpgradeExp","getMinZoneForExp","Classy","getBaseExp","xpFromZone","start","end","mcalc1","mcalc2","minimumZone","Curious","Cunning","addSpireBonus","spiresCompletedZones","spireNumber","total","spireXP","getHeirloomValue","bonus","b","getTableCell","prevRuns","getTableData","data","runs","startingLevel","lev","updateUniverse","getDailyBonus","updateDisplayData","neededExpForLevel","pasteSaveActions","gameSave","stats","valueTotal","world","heirlooms","Staff","FluffyExp","currentBonus","dailyChallenge","talents","purchased","fluffyAbility","playerSpire","Knowledge","empowerments","Ice","saveLocalStorage","localStorage","setItem","JSON","stringify","getLocalStorage","saveObj","parse","getItem","changeVar","Capable","split","active","getDailyHeliumValue","FluffyContext","FluffyProvider","0","fluffyInstances","setFluffyInstance","shown","setShown","anotherInstance","old","pasteSave","index","getInstance","TrueFalseButton","colorClasses","colors","isActive","setIsActive","MemoTrueFalseButton","InputSection","instance","renderParent","labels","innerText","handleInput","locked","prevProps","nextProps","sformat","s","v","RunTimeTable","second","time","Stats","addCommas","width","SaveBox","onPaste","show","setShow","textRef","useRef","current","ref","placeholder","MemoSaveBox","Template","setUpdate","useEffect","forceRefresh","useCallback","changeUniverse","ev","save_string","clipboardData","getData","decompressFromBase64","handle_paste","Fluffy","TITLES","Tab","location","to","NavBar","useLocation","currentLocation","pathname","App","swapTheme","body","classList","path","contains","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.206dfb87.chunk.js","sourcesContent":["export var dailyModifiers = {\r\n  minDamage: {\r\n    description: function (str) {\r\n      return (\r\n        \"Trimp min damage reduced by \" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% (additive).\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 0.1 + (str - 1) * 0.01;\r\n    },\r\n    getWeight: function (str) {\r\n      return 1 / ((1.2 + (1 - this.getMult(str))) / 2 / 1.1) - 1;\r\n    },\r\n    minMaxStep: [41, 90, 1],\r\n    chance: 1,\r\n  },\r\n  maxDamage: {\r\n    description: function (str) {\r\n      return (\r\n        \"Trimp max damage increased by \" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% (additive).\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return str;\r\n    },\r\n    getWeight: function (str) {\r\n      return 1 - (1.2 + (1 + str)) / 2 / 1.1;\r\n    },\r\n    minMaxStep: [1, 5, 0.25],\r\n    chance: 1,\r\n  },\r\n  plague: {\r\n    //Half of electricity\r\n    description: function (str) {\r\n      return (\r\n        \"Enemies stack a debuff with each attack, damaging Trimps for \" +\r\n        prettify(this.getMult(str, 1) * 100) +\r\n        \"% of total health per turn per stack, resets on Trimp death.\"\r\n      );\r\n    },\r\n    getMult: function (str, stacks) {\r\n      return 0.01 * str * stacks;\r\n    },\r\n    getWeight: function (str) {\r\n      var count = Math.ceil((1 + Math.sqrt(1 + 800 / str)) / 2);\r\n      return (6 - 0.1 * count + 0.8 / count + str / 8) / 1.75;\r\n    },\r\n    minMaxStep: [1, 10, 1],\r\n    chance: 0.3,\r\n    icon: \"*bug2\",\r\n    incompatible: [\"rampage\", \"weakness\"],\r\n    stackDesc: function (str, stacks) {\r\n      return (\r\n        \"Your Trimps are taking \" +\r\n        prettify(this.getMult(str, stacks) * 100) +\r\n        \"% damage after each attack.\"\r\n      );\r\n    },\r\n  },\r\n  weakness: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemies stack a debuff with each attack, reducing Trimp attack by \" +\r\n        prettify(100 - this.getMult(str, 1) * 100) +\r\n        \"% per stack. Stacks cap at 9 and reset on Trimp death.\"\r\n      );\r\n    },\r\n    getMult: function (str, stacks) {\r\n      return 1 - 0.01 * str * stacks;\r\n    },\r\n    getWeight: function (str) {\r\n      return str / 4;\r\n    },\r\n    minMaxStep: [1, 10, 1],\r\n    chance: 0.6,\r\n    icon: \"fire\",\r\n    incompatible: [\"bogged\", \"plague\"],\r\n    stackDesc: function (str, stacks) {\r\n      return (\r\n        \"Your Trimps have \" +\r\n        prettify(100 - this.getMult(str, stacks) * 100) +\r\n        \"% less attack.\"\r\n      );\r\n    },\r\n  },\r\n  large: {\r\n    description: function (str) {\r\n      return (\r\n        \"All housing can store \" +\r\n        prettify(100 - this.getMult(str) * 100) +\r\n        \"% fewer Trimps\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 - 0.01 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return (1 / this.getMult(str) - 1) * 2;\r\n    },\r\n    minMaxStep: [10, 60, 1],\r\n    chance: 1,\r\n  },\r\n  dedication: {\r\n    description: function (str) {\r\n      return (\r\n        \"Gain \" +\r\n        prettify(this.getMult(str) * 100 - 100) +\r\n        \"% more resources from gathering\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 + 0.1 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.075 * str * -1;\r\n    },\r\n    incompatible: [\"famine\"],\r\n    minMaxStep: [5, 40, 1],\r\n    chance: 0.75,\r\n  },\r\n  famine: {\r\n    description: function (str) {\r\n      return (\r\n        \"Gain \" +\r\n        prettify(100 - this.getMult(str) * 100) +\r\n        \"% less Metal, Food, Wood, and Gems from all sources\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 - 0.01 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return (1 / this.getMult(str) - 1) / 2;\r\n    },\r\n    incompatible: [\"dedication\"],\r\n    minMaxStep: [40, 80, 1],\r\n    chance: 2,\r\n  },\r\n  badStrength: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemy attack increased by \" +\r\n        prettify(this.getMult(str) * 100 - 100) +\r\n        \"%.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 + 0.2 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.1 * str;\r\n    },\r\n    minMaxStep: [5, 15, 1],\r\n    chance: 1,\r\n  },\r\n  badHealth: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemy health increased by \" +\r\n        prettify(this.getMult(str) * 100 - 100) +\r\n        \"%.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 + 0.2 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.2 * str;\r\n    },\r\n    minMaxStep: [3, 15, 1],\r\n    chance: 1,\r\n  },\r\n  badMapStrength: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemy attack in maps increased by \" +\r\n        prettify(this.getMult(str) * 100 - 100) +\r\n        \"%.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 + 0.3 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.1 * (1 + 1 / 3) * str;\r\n    },\r\n    minMaxStep: [3, 15, 1],\r\n    chance: 1,\r\n  },\r\n  badMapHealth: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemy health in maps increased by \" +\r\n        prettify(this.getMult(str) * 100 - 100) +\r\n        \"%.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 + 0.3 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.3 * str * (5 / 8);\r\n    },\r\n    minMaxStep: [3, 10, 1],\r\n    chance: 1,\r\n  },\r\n  crits: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemies have a 25% chance to crit for \" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% of normal damage.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 + 0.5 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.15 * this.getMult(str);\r\n    },\r\n    minMaxStep: [1, 24, 1],\r\n    chance: 0.75,\r\n  },\r\n  trimpCritChanceUp: {\r\n    description: function (str) {\r\n      return (\r\n        \"Your Trimps have +\" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% Crit Chance.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return str / 10;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.25 * str * -1;\r\n    },\r\n    minMaxStep: [5, 10, 1],\r\n    incompatible: [\"trimpCritChanceDown\"],\r\n    chance: 1.25,\r\n  },\r\n  trimpCritChanceDown: {\r\n    description: function (str) {\r\n      return (\r\n        \"Your Trimps have -\" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% Crit Chance.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return str / 10;\r\n    },\r\n    getWeight: function (str) {\r\n      return str / 4.5;\r\n    },\r\n    minMaxStep: [2, 7, 1],\r\n    incompatible: [\"trimpCritChanceUp\"],\r\n    chance: 0.75,\r\n  },\r\n  bogged: {\r\n    description: function (str) {\r\n      return (\r\n        \"Your Trimps lose \" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% of their max health after each attack.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 0.01 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      var count = Math.ceil(1 / this.getMult(str));\r\n      return (\r\n        (6 -\r\n          (0.2 * (count > 60 ? 60 : count)) / 2 +\r\n          ((500 * count + 400) / count / 500 - 1)) /\r\n        1.5\r\n      );\r\n    },\r\n    incompatible: [\"rampage\", \"weakness\"],\r\n    minMaxStep: [1, 5, 1],\r\n    chance: 0.3,\r\n  },\r\n  dysfunctional: {\r\n    description: function (str) {\r\n      return (\r\n        \"Your Trimps breed \" +\r\n        prettify(100 - this.getMult(str) * 100) +\r\n        \"% slower\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 - str * 0.05;\r\n    },\r\n    getWeight: function (str) {\r\n      return (1 / this.getMult(str) - 1) / 6;\r\n    },\r\n    minMaxStep: [10, 18, 1],\r\n    chance: 1,\r\n  },\r\n  oddTrimpNerf: {\r\n    description: function (str) {\r\n      return (\r\n        \"Trimps have \" +\r\n        prettify(100 - this.getMult(str) * 100) +\r\n        \"% less attack on odd numbered Zones\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 - str * 0.02;\r\n    },\r\n    getWeight: function (str) {\r\n      return (1 / this.getMult(str) - 1) / 1.5;\r\n    },\r\n    minMaxStep: [15, 40, 1],\r\n    chance: 1,\r\n  },\r\n  evenTrimpBuff: {\r\n    description: function (str) {\r\n      return (\r\n        \"Trimps have \" +\r\n        prettify(this.getMult(str) * 100 - 100) +\r\n        \"% more attack on even numbered Zones\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      return 1 + str * 0.2;\r\n    },\r\n    getWeight: function (str) {\r\n      return (this.getMult(str) - 1) * -1;\r\n    },\r\n    minMaxStep: [1, 10, 1],\r\n    chance: 1,\r\n  },\r\n  karma: {\r\n    description: function (str) {\r\n      return (\r\n        \"Gain a stack after killing an enemy, increasing all non \" +\r\n        heliumOrRadon(false, true) +\r\n        \" loot by \" +\r\n        prettify(this.getMult(str, 1) * 100 - 100) +\r\n        \"%. Stacks cap at \" +\r\n        this.getMaxStacks(str) +\r\n        \", and reset after clearing a Zone.\"\r\n      );\r\n    },\r\n    stackDesc: function (str, stacks) {\r\n      return (\r\n        \"Your Trimps are finding \" +\r\n        prettify(this.getMult(str, stacks) * 100 - 100) +\r\n        \"% more loot!\"\r\n      );\r\n    },\r\n    getMaxStacks: function (str) {\r\n      return Math.floor((str % 9) * 25) + 300;\r\n    },\r\n    getMult: function (str, stacks) {\r\n      var realStrength = Math.ceil(str / 9);\r\n      return 1 + 0.0015 * realStrength * stacks;\r\n    },\r\n    getWeight: function (str) {\r\n      return (this.getMult(str, this.getMaxStacks(str)) - 1) / -2;\r\n    },\r\n    icon: \"*arrow-up\",\r\n    minMaxStep: [1, 45, 1],\r\n    chance: 1,\r\n  },\r\n  toxic: {\r\n    description: function (str) {\r\n      return (\r\n        \"Gain a stack after killing an enemy, reducing breed speed by \" +\r\n        prettify(100 - this.getMult(str, 1) * 100) +\r\n        \"% (compounding). Stacks cap at \" +\r\n        this.getMaxStacks(str) +\r\n        \", and reset after clearing a Zone.\"\r\n      );\r\n    },\r\n    stackDesc: function (str, stacks) {\r\n      return (\r\n        \"Your Trimps are breeding \" +\r\n        prettify(100 - this.getMult(str, stacks) * 100) +\r\n        \"% slower.\"\r\n      );\r\n    },\r\n    getMaxStacks: function (str) {\r\n      return Math.floor((str % 9) * 25) + 300;\r\n    },\r\n    getMult: function (str, stacks) {\r\n      var realStrength = Math.ceil(str / 9);\r\n      return Math.pow(1 - 0.001 * realStrength, stacks);\r\n    },\r\n    getWeight: function (str) {\r\n      return (1 / this.getMult(str, this.getMaxStacks(str)) - 1) / 6;\r\n    },\r\n    icon: \"*radioactive\",\r\n    minMaxStep: [1, 45, 1],\r\n    chance: 1,\r\n  },\r\n  bloodthirst: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemies gain a stack of Bloodthirst whenever Trimps die. Every \" +\r\n        this.getFreq(str) +\r\n        \" stacks, enemies will heal to full and gain an additive 50% attack. Stacks cap at \" +\r\n        this.getMaxStacks(str) +\r\n        \" and reset after killing an enemy.\"\r\n      );\r\n    },\r\n    stackDesc: function (str, stacks) {\r\n      var freq = this.getFreq(str);\r\n      var max = this.getMaxStacks(str);\r\n      var text = \"This Bad Guy\";\r\n      if (stacks < max) {\r\n        var next = freq - (stacks % freq);\r\n        text +=\r\n          \" will heal to full and gain attack in \" +\r\n          next +\r\n          \" stack\" +\r\n          (next === 1 ? \"\" : \"s\") +\r\n          \", \" +\r\n          (stacks >= freq ? \"\" : \" and\") +\r\n          \" gains 1 stack whenever Trimps die\";\r\n      }\r\n      if (stacks >= freq) {\r\n        if (stacks < max) text += \", and\";\r\n        text +=\r\n          \" currently has \" +\r\n          prettify(this.getMult(str, stacks) * 100 - 100) +\r\n          \"% more attack\";\r\n      }\r\n      text += \".\";\r\n      return text;\r\n    },\r\n    getMaxStacks: function (str) {\r\n      return this.getFreq(str) * (2 + Math.floor(str / 2));\r\n    },\r\n    getFreq: function (str) {\r\n      return 10 - str;\r\n    },\r\n    getMult: function (str, stacks) {\r\n      var count = Math.floor(stacks / this.getFreq(str));\r\n      return 1 + 0.5 * count;\r\n    },\r\n    getWeight: function (str) {\r\n      return 0.5 + 0.25 * Math.floor(str / 2);\r\n    },\r\n    minMaxStep: [1, 7, 1],\r\n    chance: 1,\r\n    icon: \"*flask\",\r\n    iconOnEnemy: true,\r\n  },\r\n  explosive: {\r\n    description: function (str) {\r\n      var text =\r\n        \"Enemies instantly deal \" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% of their attack damage when killed\";\r\n      if (str > 15) {\r\n        text += \" unless your block is as high as your maximum health\";\r\n      }\r\n      text += \".\";\r\n      return text;\r\n    },\r\n    getMult: function (str) {\r\n      return str;\r\n    },\r\n    getWeight: function (str) {\r\n      var mult = this.getMult(str);\r\n      if (str <= 15) {\r\n        return (3 / 20) * mult + 1 / 4;\r\n      } else {\r\n        return (1 / 14) * mult - 1 / 7;\r\n      }\r\n    },\r\n    get minMaxStep() {\r\n      if (window.daily_universe === 1) return [5, 30, 1];\r\n      return [5, 10, 1];\r\n    },\r\n    chance: 1,\r\n  },\r\n  slippery: {\r\n    description: function (str) {\r\n      return (\r\n        \"Enemies have a \" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% chance to dodge your attacks on \" +\r\n        (str <= 15 ? \"odd\" : \"even\") +\r\n        \" Zones.\"\r\n      );\r\n    },\r\n    getMult: function (str) {\r\n      if (str > 15) str -= 15;\r\n      return 0.02 * str;\r\n    },\r\n    getWeight: function (str) {\r\n      return ((1 / (1 - this.getMult(str)) - 1) * 10) / 1.5;\r\n    },\r\n    minMaxStep: [1, 30, 1],\r\n    chance: 1,\r\n  },\r\n  rampage: {\r\n    description: function (str) {\r\n      return (\r\n        \"Gain a stack after killing an enemy, increasing Trimp attack by \" +\r\n        prettify(this.getMult(str, 1) * 100 - 100) +\r\n        \"% (additive). Stacks cap at \" +\r\n        this.getMaxStacks(str) +\r\n        \", and reset when your Trimps die.\"\r\n      );\r\n    },\r\n    stackDesc: function (str, stacks) {\r\n      return (\r\n        \"Your Trimps are dealing \" +\r\n        prettify(this.getMult(str, stacks) * 100 - 100) +\r\n        \"% more damage.\"\r\n      );\r\n    },\r\n    getMaxStacks: function (str) {\r\n      return Math.floor(((str % 10) + 1) * 10);\r\n    },\r\n    getMult: function (str, stacks) {\r\n      var realStrength = Math.ceil(str / 10);\r\n      return 1 + 0.01 * realStrength * stacks;\r\n    },\r\n    getWeight: function (str) {\r\n      return (1 - this.getMult(str, 1)) * this.getMaxStacks(str);\r\n    },\r\n    icon: \"*fire\",\r\n    incompatible: [\"plague\", \"bogged\"],\r\n    minMaxStep: [1, 40, 1],\r\n    chance: 1,\r\n  },\r\n  mutimps: {\r\n    description: function (str) {\r\n      var size = str % 5;\r\n      if (size === 0) size = \"\";\r\n      else size = \"the first \" + prettify(size * 2) + \" rows of\";\r\n\r\n      var name = str < 4 ? \"Mutimps\" : \"Hulking Mutimps\";\r\n      return (\r\n        \"40% of Bad Guys in \" +\r\n        size +\r\n        \" the World will be mutated into \" +\r\n        name +\r\n        \".\"\r\n      );\r\n    },\r\n    getWeight: function (str) {\r\n      return (str / 10) * 1.5;\r\n    },\r\n    getMaxCellNum: function (str) {\r\n      if (str > 5) str -= 5;\r\n      str--;\r\n      var values = [19, 39, 59, 79, 99];\r\n      return values[str];\r\n    },\r\n    minMaxStep: [1, 10, 1],\r\n    chance: 1,\r\n  },\r\n  empower: {\r\n    description: function (str) {\r\n      var s = str === 1 ? \"\" : \"s\";\r\n      return (\r\n        \"All enemies gain \" +\r\n        str +\r\n        \" stack\" +\r\n        s +\r\n        \" of Empower whenever your Trimps die in the World. Empower increases the attack and health of Bad Guys in the World by 0.2% per stack, can stack to 9999, and never resets.\"\r\n      );\r\n    },\r\n    getWeight: function (str) {\r\n      return (str / 6) * 2;\r\n    },\r\n    stackDesc: function (str, stacks) {\r\n      return (\r\n        \"This Bad Guy is Empowered and has \" +\r\n        prettify(this.getMult(str, stacks) * 100 - 100) +\r\n        \"% more health and attack.\"\r\n      );\r\n    },\r\n    stacksToAdd: function (str) {\r\n      return str;\r\n    },\r\n    getMult: function (str, stacks) {\r\n      return 1 + 0.002 * stacks;\r\n    },\r\n    getMaxStacks: function (str) {\r\n      return 9999;\r\n    },\r\n    worldStacksOnly: true,\r\n    iconOnEnemy: true,\r\n    icon: \"baby-formula\",\r\n    minMaxStep: [1, 10, 1],\r\n    chance: 1,\r\n  },\r\n  pressure: {\r\n    description: function (str) {\r\n      return (\r\n        \"Trimps gain a stack of Pressure every \" +\r\n        Math.round(this.timePerStack(str)) +\r\n        \" seconds. Each stack of pressure reduces Trimp health by 1%. Max of \" +\r\n        Math.round(this.getMaxStacks(str)) +\r\n        \" stacks, stacks reset after clearing a Zone.\"\r\n      );\r\n    },\r\n    getWeight: function (str) {\r\n      var time = 105 - this.timePerStack(str);\r\n      var stacks = this.getMaxStacks(str);\r\n      return (time * 1.3 + stacks) / 200;\r\n    },\r\n    getMult: function (str, stacks) {\r\n      return Math.pow(0.99, stacks);\r\n    },\r\n    timePerStack: function (str) {\r\n      var thisStr = Math.ceil(str / 4) - 1;\r\n      return 45 + thisStr * 5;\r\n    },\r\n    stackDesc: function (str, stacks) {\r\n      return (\r\n        \"Your Trimps are under a lot of pressure. Maximum health is reduced by \" +\r\n        prettify((1 - this.getMult(str, stacks)) * 100) +\r\n        \"%.\"\r\n      );\r\n    },\r\n    getMaxStacks: function (str) {\r\n      var thisStr = Math.floor(str % 4);\r\n      return 45 + thisStr * 5;\r\n    },\r\n    icon: \"*heart3\",\r\n    minMaxStep: [1, 16, 1],\r\n    chance: 1,\r\n  },\r\n  mirrored: {\r\n    description: function (str) {\r\n      var reflectChance = this.getReflectChance(str);\r\n      return (\r\n        \"Enemies have a\" +\r\n        (reflectChance.toString()[0] === \"8\" ? \"n\" : \"\") +\r\n        \" \" +\r\n        prettify(reflectChance) +\r\n        \"% chance to reflect an attack, dealing \" +\r\n        prettify(this.getMult(str) * 100) +\r\n        \"% of damage taken back to your Trimps.\"\r\n      );\r\n    },\r\n    getReflectChance: function (str) {\r\n      return Math.ceil(str / 10) * 10;\r\n    },\r\n    getMult: function (str) {\r\n      return ((str % 10) + 1) / 10;\r\n    },\r\n    getWeight: function (str) {\r\n      return (\r\n        ((this.getReflectChance(str) + 90) / 100) *\r\n        0.85 *\r\n        ((this.getMult(str) + 0.9) * 0.85)\r\n      );\r\n    },\r\n    testWeights: function () {\r\n      var min = 0;\r\n      var max = 0;\r\n      var results = [];\r\n      for (\r\n        var x = this.minMaxStep[0];\r\n        x <= this.minMaxStep[1];\r\n        x += this.minMaxStep[2]\r\n      ) {\r\n        var result = this.getWeight(x);\r\n        if (min === 0) min = result;\r\n        else if (result < min) min = result;\r\n        if (result > max) max = result;\r\n        results.push(result);\r\n      }\r\n      console.log(results);\r\n      return \"Min: \" + min + \", Max: \" + max;\r\n    },\r\n    reflectDamage: function (str, attack) {\r\n      if (Math.floor(Math.random() * 100) >= this.getReflectChance(str))\r\n        return 0;\r\n      return this.getMult(str) * attack;\r\n    },\r\n    minMaxStep: [1, 100, 1],\r\n    chance: 1,\r\n  },\r\n  metallicThumb: {\r\n    description: function (str) {\r\n      return (\r\n        \"Equipment is \" + prettify((1 - this.getMult(str)) * 100) + \"% cheaper.\"\r\n      );\r\n    },\r\n    getWeight: function (str) {\r\n      return (str + 3) / 26;\r\n    },\r\n    getMult: function (str) {\r\n      return 1 - (str / 100) * 5;\r\n    },\r\n    minMaxStep: [1, 10, 1],\r\n    chance: 1,\r\n  },\r\n  hemmorrhage: {\r\n    description: function (str) {\r\n      var res = this.getResources(str);\r\n      var text = \"Every 15 seconds, your stored \";\r\n      for (var x = 1; x < res.length; x++) {\r\n        if (x === 2) {\r\n          if (res.length === 3) text += \" and \";\r\n          else text += \", \";\r\n        } else if (x === 3) {\r\n          text += \", and \";\r\n        }\r\n        text += res[x].charAt(0).toUpperCase() + res[x].slice(1);\r\n      }\r\n      text += \" is reduced by \" + prettify(res[0]) + \"%\";\r\n      return text;\r\n    },\r\n    getResources: function (str) {\r\n      str = str + \"\";\r\n      var strength = str.length >= 4 ? parseInt(str[3], 0) : 0;\r\n      strength = 25 + strength * 5;\r\n      var res = [strength];\r\n      if (parseInt(str[0], 10) < 7) res.push(\"food\");\r\n      if (str.length < 2) {\r\n        if (res.length < 2) res.push(\"food\");\r\n        return res;\r\n      }\r\n      if (parseInt(str[1], 10) < 7) res.push(\"wood\");\r\n      if (str.length < 3) {\r\n        if (res.length < 2) res.push(\"wood\");\r\n        return res;\r\n      }\r\n      if (parseInt(str[2], 10) < 7) res.push(\"metal\");\r\n      if (res.length < 2) res.push(\"metal\");\r\n      return res;\r\n    },\r\n    getWeight: function (str) {\r\n      var res = this.getResources(str);\r\n      var base = 0.3 * res.length * (1 + res[0] / 50);\r\n      return base;\r\n    },\r\n    blockU1: true,\r\n    minMaxStep: [0, 9999, 1],\r\n    chance: 2,\r\n  },\r\n  /* \t\tdisarmed: {\r\n\t\t\tequipmentList: [\"Boots\", \"Mace\", \"Helmet\", \"Polearm\", \"Pants\", \"Battleaxe\", \"Shoulderguards\", \"Greatsword\", \"Breastplate\", \"Arbalest\", \"Gambeson\"],\r\n\t\t\tdescription: function (str) {\r\n\t\t\t\treturn \"You can't use something\"\r\n\t\t\t},\r\n\t\t\tgetBannedEquipment(str, checkOne){\r\n\t\t\t\tif (checkOne) return (this.equipmentList.indexOf(checkOne) < str);\r\n\t\t\t},\r\n\t\t\tminMaxStep: [1, 11, 1],\r\n\t\t\tchance: 1\r\n\t\t} */\r\n};\r\n\r\nexport function prettify(number) {\r\n  var numberTmp = number;\r\n  // if (!isFinite(number)) return \"<span class='icomoon icon-infinity'></span>\";\r\n  if (number >= 1000 && number < 10000) return Math.floor(number);\r\n  if (number === 0) return prettifySub(0);\r\n  if (number < 0) return \"-\" + prettify(-number);\r\n  if (number < 0.005) return (+number).toExponential(2);\r\n\r\n  var base = Math.floor(Math.log(number) / Math.log(1000));\r\n  if (base <= 0) return prettifySub(number);\r\n\r\n  if (game.options.menu.standardNotation.enabled === 5) {\r\n    //Thanks ZXV\r\n    var logBase = game.global.logNotBase;\r\n    var exponent = Math.log(number) / Math.log(logBase);\r\n    return prettifySub(exponent) + \"L\" + logBase;\r\n  }\r\n\r\n  number /= Math.pow(1000, base);\r\n  if (number >= 999.5) {\r\n    // 999.5 rounds to 1000 and we don’t want to show “1000K” or such\r\n    number /= 1000;\r\n    ++base;\r\n  }\r\n  if (game.options.menu.standardNotation.enabled === 3) {\r\n    var suffices = [\r\n      \"a\",\r\n      \"b\",\r\n      \"c\",\r\n      \"d\",\r\n      \"e\",\r\n      \"f\",\r\n      \"g\",\r\n      \"h\",\r\n      \"i\",\r\n      \"j\",\r\n      \"k\",\r\n      \"l\",\r\n      \"m\",\r\n      \"n\",\r\n      \"o\",\r\n      \"p\",\r\n      \"q\",\r\n      \"r\",\r\n      \"s\",\r\n      \"t\",\r\n      \"u\",\r\n      \"v\",\r\n      \"w\",\r\n      \"x\",\r\n      \"y\",\r\n      \"z\",\r\n    ];\r\n    if (base <= suffices.length) var suffix = suffices[base - 1];\r\n    else {\r\n      var suf2 = (base % suffices.length) - 1;\r\n      if (suf2 < 0) suf2 = suffices.length - 1;\r\n      suffix = suffices[Math.ceil(base / suffices.length) - 2] + suffices[suf2];\r\n    }\r\n  } else {\r\n    suffices = [\r\n      \"K\",\r\n      \"M\",\r\n      \"B\",\r\n      \"T\",\r\n      \"Qa\",\r\n      \"Qi\",\r\n      \"Sx\",\r\n      \"Sp\",\r\n      \"Oc\",\r\n      \"No\",\r\n      \"Dc\",\r\n      \"Ud\",\r\n      \"Dd\",\r\n      \"Td\",\r\n      \"Qad\",\r\n      \"Qid\",\r\n      \"Sxd\",\r\n      \"Spd\",\r\n      \"Od\",\r\n      \"Nd\",\r\n      \"V\",\r\n      \"Uv\",\r\n      \"Dv\",\r\n      \"Tv\",\r\n      \"Qav\",\r\n      \"Qiv\",\r\n      \"Sxv\",\r\n      \"Spv\",\r\n      \"Ov\",\r\n      \"Nv\",\r\n      \"Tg\",\r\n      \"Utg\",\r\n      \"Dtg\",\r\n      \"Ttg\",\r\n      \"Qatg\",\r\n      \"Qitg\",\r\n      \"Sxtg\",\r\n      \"Sptg\",\r\n      \"Otg\",\r\n      \"Ntg\",\r\n      \"Qaa\",\r\n      \"Uqa\",\r\n      \"Dqa\",\r\n      \"Tqa\",\r\n      \"Qaqa\",\r\n      \"Qiqa\",\r\n      \"Sxqa\",\r\n      \"Spqa\",\r\n      \"Oqa\",\r\n      \"Nqa\",\r\n      \"Qia\",\r\n      \"Uqi\",\r\n      \"Dqi\",\r\n      \"Tqi\",\r\n      \"Qaqi\",\r\n      \"Qiqi\",\r\n      \"Sxqi\",\r\n      \"Spqi\",\r\n      \"Oqi\",\r\n      \"Nqi\",\r\n      \"Sxa\",\r\n      \"Usx\",\r\n      \"Dsx\",\r\n      \"Tsx\",\r\n      \"Qasx\",\r\n      \"Qisx\",\r\n      \"Sxsx\",\r\n      \"Spsx\",\r\n      \"Osx\",\r\n      \"Nsx\",\r\n      \"Spa\",\r\n      \"Usp\",\r\n      \"Dsp\",\r\n      \"Tsp\",\r\n      \"Qasp\",\r\n      \"Qisp\",\r\n      \"Sxsp\",\r\n      \"Spsp\",\r\n      \"Osp\",\r\n      \"Nsp\",\r\n      \"Og\",\r\n      \"Uog\",\r\n      \"Dog\",\r\n      \"Tog\",\r\n      \"Qaog\",\r\n      \"Qiog\",\r\n      \"Sxog\",\r\n      \"Spog\",\r\n      \"Oog\",\r\n      \"Nog\",\r\n      \"Na\",\r\n      \"Un\",\r\n      \"Dn\",\r\n      \"Tn\",\r\n      \"Qan\",\r\n      \"Qin\",\r\n      \"Sxn\",\r\n      \"Spn\",\r\n      \"On\",\r\n      \"Nn\",\r\n      \"Ct\",\r\n      \"Uc\",\r\n    ];\r\n    if (\r\n      game.options.menu.standardNotation.enabled === 2 ||\r\n      (game.options.menu.standardNotation.enabled === 1 &&\r\n        base > suffices.length) ||\r\n      (game.options.menu.standardNotation.enabled === 4 && base > 31)\r\n    )\r\n      suffix = \"e\" + base * 3;\r\n    else if (\r\n      game.options.menu.standardNotation.enabled &&\r\n      base <= suffices.length\r\n    )\r\n      suffix = suffices[base - 1];\r\n    else {\r\n      exponent = parseFloat(numberTmp).toExponential(2);\r\n      exponent = exponent.replace(\"+\", \"\");\r\n      return exponent;\r\n    }\r\n  }\r\n  return prettifySub(number) + suffix;\r\n}\r\n\r\nfunction prettifySub(number) {\r\n  number = parseFloat(number);\r\n  var floor = Math.floor(number);\r\n  if (number === floor)\r\n    // number is an integer, just show it as-is\r\n    return number;\r\n  // var precision = 3 - floor.toString().length; // use the right number of digits\r\n\r\n  return number.toFixed(3 - floor.toString().length);\r\n}\r\nfunction heliumOrRadon() {\r\n  return window.daily_universe === 1 ? \"Helium\" : \"Radon\";\r\n}\r\n\r\nvar game = {\r\n  options: {\r\n    menu: {\r\n      standardNotation: {\r\n        enabled: 4,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nvar rewards = [\r\n  \"stickler\",\r\n  \"helium\",\r\n  \"liquid\",\r\n  \"purifier\",\r\n  \"lucky\",\r\n  \"void\",\r\n  \"helium\",\r\n  \"liquid\",\r\n  \"eliminator\",\r\n  \"overkiller\",\r\n];\r\nvar prestigeRewards = [\r\n  \"dailies\",\r\n  \"voidance\",\r\n  \"overkiller\",\r\n  \"critChance\",\r\n  \"megaCrit\",\r\n  \"superVoid\",\r\n  \"voidelicious\",\r\n  \"naturesWrath\",\r\n  \"voidSiphon\",\r\n  \"plaguebrought\",\r\n];\r\nvar rewardsU2 = [\r\n  \"trapper\",\r\n  \"prism\",\r\n  \"heirloopy\",\r\n  \"radortle\",\r\n  \"healthy\",\r\n  \"wealthy\",\r\n  \"critChance\",\r\n  \"gatherer\",\r\n  \"dailies\",\r\n  \"exotic\",\r\n  \"shieldlayer\",\r\n  \"tenacity\",\r\n  \"megaCrit\",\r\n  \"critChance\",\r\n  \"smithy\",\r\n  \"biggerbetterheirlooms\",\r\n];\r\n\r\n// Heirloopy\r\n// universe === 2 => level === 3 or 2 (depending on talent)\r\n\r\n// Dailies\r\n// universe === 2 => level === 9 or 8 (depending on talent);\r\n// universe === 1 => 11 - prestige - (?1) >= 0\r\n\r\nexport function isRewardActive(\r\n  reward,\r\n  universe,\r\n  evolution,\r\n  level,\r\n  boughtEarly\r\n) {\r\n  let minus = boughtEarly ? 1 : 0;\r\n  switch (reward) {\r\n    case \"dailies\":\r\n      if (universe === 1) {\r\n        if (11 - evolution - minus - level <= 0) {\r\n          return true;\r\n        }\r\n      } else {\r\n        if (level >= 9 - minus) {\r\n          return true;\r\n        }\r\n      }\r\n      break;\r\n    case \"heirloopy\":\r\n      if (universe === 2) {\r\n        if (level >= 3 - minus) {\r\n          return true;\r\n        }\r\n      }\r\n      break;\r\n    default:\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getDailyHeliumValue(weight, active) {\r\n  var value = 75 * weight + 20;\r\n  if (value < 100) value = 100;\r\n  else if (value > 500) value = 500;\r\n  if (active) value += 100;\r\n  return value;\r\n}\r\n","import clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport { DailyType } from \"../../calculators/daily\";\r\nimport { dailyModifiers } from \"../../calculators/main\";\r\n\r\nexport const WeekBox =\r\n  //  React.memo(\r\n  function WeekBox({ text }: { text: string }) {\r\n    return (\r\n      <div\r\n        className={clsx(\r\n          baseBox,\r\n          \"flex items-center justify-center text-xxs select-none sm:text-xs md:text-base\"\r\n        )}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  };\r\n//   ,\r\n//   (prevProps, nextProps) => {\r\n//     return prevProps.text === nextProps.text;\r\n//   }\r\n// );\r\n\r\nconst baseBox = \"w-11 h-11 sm:h-16 sm:w-16 md:w-24 md:h-24\";\r\n\r\ninterface Props {\r\n  object: DailyType;\r\n}\r\n\r\nfunction Box({ object }: Props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const { value, date, next, preview, tier, seed, mods } = object;\r\n\r\n  if (value === undefined) return <div className={baseBox}></div>;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={clsx(\r\n          `bg-tier${tier}`,\r\n          baseBox,\r\n          \"relative flex flex-col items-center justify-center text-black rounded shadow cursor-pointer select-none\"\r\n        )}\r\n        onClick={() => setExpanded(!expanded)}\r\n        id={String(seed)}\r\n      >\r\n        <div className=\"absolute top-0 text-xxxxs sm:text-xxs md:text-xs\">\r\n          {date}\r\n        </div>\r\n        <div className=\"text-xxs sm:text-base md:text-xl\">{`${value.toFixed(\r\n          1\r\n        )}%`}</div>\r\n        <div className=\"absolute bottom-0 text-xxxs md:text-xs\">\r\n          {preview.join(\"\")}\r\n          {next && (\r\n            <span role=\"img\" title=\"This is the next daily\">\r\n              ⭐\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {expanded && (\r\n        <span className=\"col-span-7 justify-self-center p-2 w-de bg-secondary border border-solid border-prpl rounded sm:w-deSM md:w-deMD\">\r\n          <p className=\"whitespace-pre-wrap text-xxxs sm:text-xs md:text-base\">\r\n            {date + \"\\n\"}\r\n            {Object.keys(mods).map((x, i) => {\r\n              return (\r\n                \" → \" + dailyModifiers[x].description(mods[x].strength) + \"\\n\"\r\n              );\r\n            })}\r\n            {\"Bonus is \" + value.toFixed(1) + \"%\"}\r\n          </p>\r\n        </span>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Box;\r\n\r\n// export default React.memo(Box, (prevProps, nextProps) => {\r\n// return prevProps.object?.value === nextProps.object?.value;\r\n// });\r\n","import { dailyModifiers } from \"./main\";\r\n\r\nvar months = [\r\n  \"Spacer\",\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nvar mods = {\r\n  empower: \"E\",\r\n  explosive: \"e\",\r\n  toxic: \"T\",\r\n  pressure: \"P\",\r\n  plague: \"p\",\r\n  bogged: \"B\",\r\n  trimpCritChanceUp: \"+\",\r\n  trimpCritChanceDown: \"-\",\r\n  weakness: \"W\",\r\n  minDamage: \"m\",\r\n  maxDamage: \"M\",\r\n  badHealth: \"H\",\r\n  rampage: \"D\",\r\n  karma: \"K\",\r\n  hemmorrhage: \"h\",\r\n};\r\n\r\ndeclare const window: any;\r\nwindow.daily_universe = 1;\r\n\r\nexport type DailyType = {\r\n  value?: number;\r\n  date?: string;\r\n  next?: boolean;\r\n  mods?: Partial<DailyMods>;\r\n  preview?: string[];\r\n  tier?: 1 | 2 | 3;\r\n  seed?: number;\r\n};\r\n\r\nexport function makeDaily(times): Partial<DailyType>[] {\r\n  console.log(\"making dailies\", times);\r\n  let returnable: DailyType[] = [];\r\n  var todayOfWeek: number = getDailyTimeString(0, true);\r\n  for (var z = 0; z < 8; z++) {\r\n    var dayIndex = todayOfWeek * -1 + z;\r\n    if (dayIndex > -1) {\r\n      dayIndex = z - todayOfWeek - 7;\r\n    }\r\n  }\r\n  var lastWeek = dayIndex - 7;\r\n  var blank = lastWeek - dayIndex + 1;\r\n  if (lastWeek === -13) {\r\n    lastWeek = -6;\r\n    blank = -7;\r\n  }\r\n\r\n  for (var x = lastWeek; x < times; x++) {\r\n    let dailyObj = getDailyChallenge(x);\r\n    let seed = dailyObj.seed;\r\n    delete dailyObj[\"seed\"];\r\n    let dailyValue = getDailyHeliumValueDaily(countDailyWeightDaily(dailyObj));\r\n    if (x < blank) {\r\n      returnable.push({});\r\n      continue;\r\n    }\r\n    // console.log(dailyObj);\r\n    returnable.push({\r\n      value: dailyValue,\r\n      date: getPrettyTimeString(x),\r\n      next: x === 1 ? true : false,\r\n      mods: dailyObj,\r\n      preview: Object.keys(dailyObj).reduce((prev, curr) => {\r\n        if (curr === \"seed\") return prev;\r\n        if (mods.hasOwnProperty(curr)) {\r\n          prev.push(mods[curr]);\r\n        }\r\n        return prev;\r\n      }, []),\r\n      tier: findColor(dailyValue),\r\n      seed: seed,\r\n    });\r\n    // console.log(returnable);\r\n  }\r\n  return returnable;\r\n}\r\n\r\nvar tiers = [225, 335, 425];\r\n\r\nfunction findColor(value) {\r\n  if (value <= tiers[0]) {\r\n    return 1;\r\n  } else if (value <= tiers[1] && value > tiers[0]) {\r\n    return 2;\r\n  } else if (value > tiers[1]) {\r\n    return 3;\r\n  }\r\n}\r\n\r\nfunction getDailyTimeString(add: number, getDayOfWeek?: boolean): number {\r\n  var today = new Date();\r\n  if (!add) add = 0;\r\n  today.setUTCDate(today.getUTCDate() + add);\r\n  if (getDayOfWeek) return today.getUTCDay();\r\n  var year = today.getUTCFullYear();\r\n  var month: string | number = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\r\n  if (month < 10) month = \"0\" + month;\r\n  var day: string | number = today.getUTCDate();\r\n  if (day < 10) day = \"0\" + day;\r\n  var seedStr: string | number = String(year) + String(month) + String(day);\r\n  seedStr = parseInt(seedStr);\r\n  return seedStr;\r\n}\r\n\r\nfunction getPrettyTimeString(add: number): string {\r\n  var today = new Date();\r\n  if (!add) add = 0;\r\n  today.setUTCDate(today.getUTCDate() + add);\r\n  var year = today.getUTCFullYear();\r\n  var month: number | string = today.getUTCMonth() + 1; //For some reason January is month 0? Why u do dis?\r\n  if (month < 10) month = \"0\" + month;\r\n  var day: number | string = today.getUTCDate();\r\n  if (day < 10) day = \"0\" + day;\r\n  return year + \"-\" + month + \"-\" + day;\r\n}\r\n\r\nfunction getRandomIntSeeded(seed: number, minIncl: number, maxExcl: number) {\r\n  var toReturn = Math.floor(seededRandom(seed) * (maxExcl - minIncl)) + minIncl;\r\n  return toReturn === maxExcl ? minIncl : toReturn;\r\n}\r\n\r\nfunction seededRandom(seed: number) {\r\n  var x = Math.sin(seed++) * 10000;\r\n  return parseFloat((x - Math.floor(x)).toFixed(7));\r\n}\r\n\r\nfunction everythingInArrayGreaterEqual(smaller, bigger) {\r\n  if (bigger.length < smaller.length) return false;\r\n  for (var x = 0; x < smaller.length; x++) {\r\n    if (smaller[x] > bigger[x]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport type DailyMods = {\r\n  seed: number;\r\n  empower?: object;\r\n  explosive?: object;\r\n  toxic?: object;\r\n  pressure?: object;\r\n  plague?: object;\r\n  bogged?: object;\r\n  trimpCritChanceUp?: object;\r\n  trimpCritChanceDown?: object;\r\n  weakness?: object;\r\n  minDamage?: object;\r\n  maxDamage?: object;\r\n  badHealth?: object;\r\n  rampage?: object;\r\n  karma?: object;\r\n  hemmorrhage?: object;\r\n};\r\n\r\nfunction getDailyChallenge(add: number) {\r\n  // checkCompleteDailies();\r\n  var dateSeed = getDailyTimeString(add);\r\n  var seedStr = getRandomIntSeeded(Number(dateSeed) + 2, 1, 1e9);\r\n  //seedStr = getRandomIntSeeded(seedStr, 1, 1e9);\r\n  var weightTarget = getRandomIntSeeded(seedStr++, 25, 51) / 10;\r\n  //Build a list of all modifiers to choose from\r\n  var modifierList = [];\r\n  var totalChance = 0;\r\n  var dailyObject: Partial<DailyMods> = {};\r\n  for (var item in dailyModifiers) {\r\n    if (window.daily_universe === 1 && dailyModifiers[item].blockU1) continue;\r\n    modifierList.push(item);\r\n    totalChance += dailyModifiers[item].chance;\r\n  }\r\n  var chanceMod = 1000 / totalChance;\r\n  var currentWeight = 0;\r\n  var maxLoops = modifierList.length;\r\n  var sizeCount = [0, 0, 0]; // < 0.3, < 1, >= 1\r\n  var sizeTarget = [\r\n    getRandomIntSeeded(seedStr++, 0, 2),\r\n    getRandomIntSeeded(seedStr++, 1, 5),\r\n    getRandomIntSeeded(seedStr++, 2, 6),\r\n  ];\r\n  if (weightTarget < 2.75) {\r\n    sizeTarget[2] = 0;\r\n    sizeTarget[0] += 2;\r\n  }\r\n  mainLoop: for (var x = 0; x < maxLoops; x++) {\r\n    var maxZLoops = modifierList.length;\r\n    var firstChoice = [];\r\n    for (var z = 0; z < maxZLoops; z++) {\r\n      var roll = getRandomIntSeeded(seedStr++, 0, 1000);\r\n      var selectedIndex;\r\n      var checkedTotal = 0;\r\n      for (var y = 0; y < modifierList.length; y++) {\r\n        checkedTotal += dailyModifiers[modifierList[y]].chance * chanceMod;\r\n        if (roll < checkedTotal || y === modifierList.length - 1) {\r\n          totalChance -= dailyModifiers[modifierList[y]].chance;\r\n          chanceMod = 1000 / totalChance;\r\n          selectedIndex = y;\r\n          break;\r\n        }\r\n      }\r\n      var selectedMod = modifierList[selectedIndex];\r\n      var modObj = dailyModifiers[selectedMod];\r\n      var str =\r\n        modObj.minMaxStep[0] +\r\n        getRandomIntSeeded(\r\n          seedStr++,\r\n          0,\r\n          Math.floor(\r\n            (modObj.minMaxStep[1] + modObj.minMaxStep[2]) *\r\n              (1 / modObj.minMaxStep[2])\r\n          ) - modObj.minMaxStep[0]\r\n        ) *\r\n          modObj.minMaxStep[2];\r\n      var modWeight = modObj.getWeight(str);\r\n      var modSize = modWeight < 0.85 ? 0 : modWeight < 1.85 ? 1 : 2;\r\n      if (modWeight + currentWeight > weightTarget + 1) continue;\r\n      if (everythingInArrayGreaterEqual(sizeTarget, sizeCount)) {\r\n        //use it and stuff\r\n      } else if (\r\n        sizeCount[modSize] >= sizeTarget[modSize] &&\r\n        z !== maxZLoops - 1\r\n      ) {\r\n        if (!firstChoice.length)\r\n          firstChoice = [selectedMod, str, selectedIndex, modSize, modWeight];\r\n        continue;\r\n      } else if (z === maxZLoops - 1 && firstChoice.length) {\r\n        selectedMod = firstChoice[0];\r\n        modObj = dailyModifiers[selectedMod];\r\n        selectedIndex = firstChoice[2];\r\n        str = firstChoice[1];\r\n        modSize = firstChoice[3];\r\n        modWeight = firstChoice[4];\r\n      }\r\n      //It's been officially selected by this point\r\n      sizeCount[modSize]++;\r\n      dailyObject[modifierList[selectedIndex]] = {\r\n        strength: str,\r\n        stacks: 0,\r\n      };\r\n      currentWeight += modWeight;\r\n      if (\r\n        x > 0 &&\r\n        (currentWeight > weightTarget ||\r\n          (currentWeight >= weightTarget - 0.5 &&\r\n            currentWeight <= weightTarget + 0.5))\r\n      ) {\r\n        break mainLoop;\r\n      }\r\n      modifierList.splice(selectedIndex, 1);\r\n      if (modObj.incompatible) {\r\n        for (let x = 0; x < modObj.incompatible.length; x++) {\r\n          //jshint ignore:line\r\n          var incompatibleIndex = modifierList.indexOf(modObj.incompatible[x]);\r\n          if (incompatibleIndex >= 0) {\r\n            modifierList.splice(incompatibleIndex, 1);\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  dailyObject.seed = Number(dateSeed);\r\n  // console.log(dailyObject);\r\n  return dailyObject;\r\n}\r\n\r\nexport function countDailyWeightDaily(daily) {\r\n  var weight = 0;\r\n  let dailyObj = daily;\r\n  for (var item in dailyObj) {\r\n    if (item === \"seed\") continue;\r\n    weight += dailyModifiers[item].getWeight(dailyObj[item].strength);\r\n  }\r\n  return weight;\r\n}\r\n\r\nexport function getDailyHeliumValueDaily(weight) {\r\n  var value = 75 * weight + 20;\r\n  if (value < 100) value = 100;\r\n  else if (value > 500) value = 500;\r\n  return value;\r\n}\r\n\r\nlet lastSeed;\r\n\r\nexport function maybeMakeDaily(times, force) {\r\n  let newestSeed = getDailyTimeString(0);\r\n  if (lastSeed === newestSeed && force === false) {\r\n    return [];\r\n  } else {\r\n    let dailies = makeDaily(times);\r\n    lastSeed = newestSeed;\r\n    console.log(\"made dailies i guess lawl\", times, dailies);\r\n    return dailies;\r\n  }\r\n}\r\n\r\nmakeDaily(24);\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  onClick?: (e?: any) => void;\r\n  className?: string;\r\n  label: string;\r\n  variant?: \"small\";\r\n}\r\n\r\nfunction Button({ onClick, className, label, variant }: Props) {\r\n  return (\r\n    <input\r\n      type=\"button\"\r\n      className={clsx(\r\n        className,\r\n        variant === \"small\"\r\n          ? \"p-1 text-xs sm:text-base\"\r\n          : \" text-sm sm:text-base p-2\",\r\n        \"self-center bg-secondary border border-solid border-accent rounded focus:outline-none shadow cursor-pointer select-none\"\r\n      )}\r\n      onClick={onClick}\r\n      value={label}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  onChange?: (e) => void;\r\n  className?: string;\r\n  defaultValue?: string | number;\r\n  value?: string | number;\r\n  type?: string;\r\n  min?: number;\r\n  max?: number;\r\n  variant?: \"fluffy\";\r\n  disabled?: true;\r\n}\r\n\r\nconst Input = ({\r\n  onChange,\r\n  className,\r\n  defaultValue,\r\n  value,\r\n  type,\r\n  min,\r\n  max,\r\n  variant,\r\n  disabled,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"relative mt-0.5 rounded shadow\">\r\n      <input\r\n        type={variant === \"fluffy\" ? (type ? type : \"number\") : null}\r\n        onChange={onChange}\r\n        defaultValue={defaultValue}\r\n        value={value}\r\n        min={variant === \"fluffy\" ? (min ? min : 0) : null}\r\n        max={max}\r\n        disabled={disabled ?? null}\r\n        className={clsx(\r\n          className,\r\n          \"block p-1 pl-2 w-full text-xs bg-secondary border border-solid border-accent rounded focus:outline-none sm:text-base\"\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MemoInput = React.memo(Input);\r\n\r\nexport default Input;\r\n","import clsx from \"clsx\";\r\nimport React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  children: React.ReactChild | React.ReactChild[];\r\n  className?: string;\r\n}\r\n\r\nexport default function Label({ children, className }: Props): ReactElement {\r\n  return (\r\n    <label className={clsx(className, \"block text-left text-xxs sm:text-xs\")}>\r\n      {children}\r\n    </label>\r\n  );\r\n}\r\n","import clsx from \"clsx\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Button from \"../utils/Button\";\r\nimport Input from \"../utils/Input\";\r\nimport Label from \"../utils/Label\";\r\nimport { DailyContext } from \"./Context\";\r\n\r\nexport var filterTypes = {\r\n  minDamage: true,\r\n  maxDamage: true,\r\n  plague: true,\r\n  weakness: true,\r\n  large: true,\r\n  dedication: true,\r\n  famine: true,\r\n  badStrength: true,\r\n  badHealth: true,\r\n  badMapStrength: true,\r\n  badMapHealth: true,\r\n  crits: true,\r\n  bogged: true,\r\n  dysfunctional: true,\r\n  oddTrimpNerf: true,\r\n  evenTrimpBuff: true,\r\n  karma: true,\r\n  toxic: true,\r\n  bloodthirst: true,\r\n  explosive: true,\r\n  slippery: true,\r\n  rampage: true,\r\n  mutimps: true,\r\n  empower: true,\r\n  pressure: true,\r\n  mirrored: true,\r\n  metallicThumb: true,\r\n  trimpCritChanceUp: true,\r\n  trimpCritChanceDown: true,\r\n  hemmorrhage: true,\r\n};\r\n\r\ndeclare const window: any;\r\n\r\nexport var toMatch = 2;\r\n\r\nfunction FilterBox({ type }: { type: string }) {\r\n  const { updateDailiesFiltered } = useContext(DailyContext);\r\n  const [enabled, setEnabled] = useState(filterTypes[type]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={clsx(\r\n          filterTypes[type] ? \"bg-tier3\" : \"bg-tier1\",\r\n          \"m-0.5 p-1 w-min text-black text-xxs shadow cursor-pointer select-none sm:text-xs md:text-sm\"\r\n        )}\r\n        onClick={() => {\r\n          filterTypes[type] = !filterTypes[type];\r\n\r\n          updateDailiesFiltered();\r\n\r\n          setEnabled(!enabled);\r\n        }}\r\n      >\r\n        {type}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Filter() {\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const { updateDailiesFiltered } = useContext(DailyContext);\r\n\r\n  // Specifically for forcing component to rerender when updating filter types.\r\n  const [flipAll, setFlipAll] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"my-2\"\r\n        onClick={() => {\r\n          setShowFilter(!showFilter);\r\n        }}\r\n        label=\"Filter\"\r\n      />\r\n\r\n      {showFilter && (\r\n        <div className=\"w-11/12 text-center sm:w-9/12 md:w-3/4 lg:w-5/12\">\r\n          <div className=\"flex flex-wrap justify-center\">\r\n            {Object.keys(filterTypes)\r\n              .filter(\r\n                (type) =>\r\n                  (type === \"hemmorrhage\" && window.daily_universe === 1) ===\r\n                  false\r\n              )\r\n              .map((type, idx) => {\r\n                return <FilterBox key={idx} type={type} />;\r\n              })}\r\n          </div>\r\n          <div className=\"flex justify-center mt-2\">\r\n            <Button\r\n              className=\"mr-2\"\r\n              onClick={() => {\r\n                for (var type in filterTypes) {\r\n                  filterTypes[type] = !filterTypes[type];\r\n                }\r\n\r\n                setFlipAll(!flipAll);\r\n\r\n                updateDailiesFiltered();\r\n              }}\r\n              label=\"Flip All\"\r\n            />\r\n            <Label className=\"ml-2 w-24\">\r\n              Match Atleast\r\n              <Input\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  toMatch = Number(e.target.value);\r\n                  updateDailiesFiltered();\r\n                }}\r\n                defaultValue={toMatch}\r\n              />\r\n            </Label>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { createContext, useState } from \"react\";\r\nimport { DailyType, maybeMakeDaily } from \"../../calculators/daily\";\r\nimport { filterTypes, toMatch } from \"./Filter\";\r\n\r\ninterface ContextType {\r\n  dailies?: DailyType[];\r\n  updateDailies?: any;\r\n  updateDailiesFiltered?: any;\r\n  forceDailies?: any;\r\n}\r\n\r\nexport const DailyContext = createContext<ContextType>({});\r\n// const initial_dailies = maybeMakeDaily(365);\r\nconst DailyProvider = ({ children }) => {\r\n  const [dailies, setDailies] = useState(() => maybeMakeDaily(365, true));\r\n\r\n  const updateDailies = () => {\r\n    const updateDailies = maybeMakeDaily(365, false);\r\n    if (updateDailies.length === 0) {\r\n      console.log(\"couldnt update dailies wtf!!!\");\r\n      return;\r\n    }\r\n    console.log(\"i did update dailies\");\r\n    setDailies(updateDailies);\r\n  };\r\n\r\n  const updateDailiesFiltered = () => {\r\n    const goodMods = Object.keys(filterTypes).filter((x) => filterTypes[x]);\r\n    for (var x = 0; x < dailies.length; x++) {\r\n      if (Object.keys(dailies[x]).length === 0) continue;\r\n\r\n      let matched = 0;\r\n\r\n      Object.keys(dailies[x].mods).forEach((y, i) => {\r\n        if (goodMods.indexOf(y) !== -1) {\r\n          matched += 1;\r\n        }\r\n      });\r\n\r\n      if (matched >= toMatch) {\r\n        document.getElementById(String(dailies[x].seed)).style.visibility = \"\";\r\n      } else {\r\n        document.getElementById(String(dailies[x].seed)).style.visibility =\r\n          \"hidden\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const forceDailies = () => {\r\n    setDailies(maybeMakeDaily(365, true));\r\n  };\r\n\r\n  return (\r\n    <DailyContext.Provider\r\n      value={{ dailies, updateDailies, updateDailiesFiltered, forceDailies }}\r\n    >\r\n      {children}\r\n    </DailyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DailyProvider;\r\n","import clsx from \"clsx\";\r\nimport React, { useContext } from \"react\";\r\nimport { DailyContext } from \"./Context\";\r\n\r\ndeclare const window: any;\r\n\r\nfunction UniverseSwitch() {\r\n  const { forceDailies } = useContext(DailyContext);\r\n\r\n  const handleClick = (e) => {\r\n    let clickedNumber = Number(e.target.title);\r\n    if (window.daily_universe === clickedNumber) {\r\n      return;\r\n    } else {\r\n      window.daily_universe = clickedNumber;\r\n      forceDailies();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex mt-5 shadow-md\">\r\n      <div\r\n        className={clsx(\r\n          window.daily_universe === 1\r\n            ? \"bg-blue-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-2 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"1\"\r\n      >\r\n        Universe 1\r\n      </div>\r\n      <div\r\n        className={clsx(\r\n          window.daily_universe === 2\r\n            ? \"bg-pink-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-2 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"2\"\r\n      >\r\n        Universe 2\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UniverseSwitch;\r\n","import React, { useContext } from \"react\";\r\nimport Box, { WeekBox } from \"./Box\";\r\nimport { DailyContext } from \"./Context\";\r\nimport Filter from \"./Filter\";\r\nimport UniverseSwitch from \"./UniverseSwitch\";\r\n\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nfunction Daily() {\r\n  const { dailies } = useContext(DailyContext);\r\n\r\n  console.log(\"rendered dailies\");\r\n  return (\r\n    <div className=\"flex flex-col flex-wrap items-center\">\r\n      <UniverseSwitch />\r\n\r\n      <Filter />\r\n      <div className=\"grid gap-2 grid-cols-7 mb-4\">\r\n        {days.map((x, idx) => {\r\n          return <WeekBox key={idx} text={x} />;\r\n        })}\r\n        {dailies.map((x, idx) => {\r\n          return <Box object={x} key={idx} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","import { decompressFromBase64 } from \"lz-string\";\r\n// import { testSave1 } from \"../test/testSave1.js\";\r\nimport { countDailyWeightDaily, DailyMods } from \"./daily\";\r\nimport { GameObject, Portal, TrapProperties } from \"./GameObject.d\";\r\nimport { getDailyHeliumValue, isRewardActive } from \"./main\";\r\n\r\nconst extend = require(\"node.extend/lib/extend\");\r\n// const {\r\n// getUniverseChange,\r\n// getLevel,\r\n// getDailyBonus,\r\n// getExpBonus,\r\n// } = require(\"./fluffy\");\r\n// const { getHeirloomValue } = require(\"./main\");\r\n\r\nexport function handle_paste(ev): { game: GameObject; string: string } | false {\r\n  var save_string = ev.clipboardData.getData(\"text/plain\").replace(/\\s/g, \"\");\r\n  const game = JSON.parse(decompressFromBase64(save_string)) ?? null;\r\n  console.log(\"game\", game);\r\n  if (game?.global === undefined) return false;\r\n\r\n  return {\r\n    game,\r\n    string: save_string,\r\n  };\r\n}\r\n\r\nconst growth = 4;\r\nconst baseExp = 50;\r\nconst prestigeExpModifier = 5;\r\nconst baseFirstLevel = 1000;\r\nconst maxEvolution = 10;\r\n\r\nexport class fluffyInstance {\r\n  string: string;\r\n\r\n  name = \"init\"; // getUniverseChange\r\n  firstLevel = 1000;\r\n  expInLevel = 0;\r\n  level = 0; // getLevel\r\n\r\n  iceBonus = 0;\r\n  expBonus = 0;\r\n\r\n  exp = 0; // game.global.fluffyExp/2 // getUniverseChange\r\n  evolution = 0; // game.global.fluffyPrestige/2 // getUniverseChange\r\n\r\n  purchasedFluffyPrestigeBonus = false;\r\n  purchasedFluffyExpBonus = false;\r\n\r\n  // Edit in inputs\r\n  universe = 1; // getUniverseChange\r\n  zoneYouPortal = 0; // getUniverseChange\r\n  dailyBonus = 0;\r\n  heirloomBonus = 0;\r\n  graphNextIce = false;\r\n  spiresCompleted = [];\r\n  instantUpdating = false;\r\n  minutesPerRun = 14;\r\n\r\n  //\r\n  currentExp = 0;\r\n\r\n  traps: TrapProperties; // game.playerSpire.traps.Knowledge\r\n\r\n  daily: DailyMods; // game.global.dailyChallenge\r\n\r\n  portal: Portal;\r\n\r\n  save = {\r\n    fluffyExp: 0,\r\n    fluffyExp2: 0,\r\n    fluffyPrestige: 0,\r\n    fluffyPrestige2: 0,\r\n    lastPortal: 0, // game.global.lastPortal\r\n    lastRadonPortal: 0, // game.global.lastRadonPortal\r\n    bestFluffyExp: 0,\r\n    zone: [0, 0],\r\n    heirloomBonus: 0,\r\n  };\r\n\r\n  displayData = {\r\n    xpPerRun: 0,\r\n    currentZone: 0,\r\n    table: [],\r\n    percentToLevel: 0,\r\n    bonesToLevel: 0,\r\n    XPhr: 0,\r\n    name: \"init\",\r\n  };\r\n\r\n  atMaxEvo = () => {\r\n    if (this.universe === 2) return true;\r\n    if (this.evolution === maxEvolution) return true;\r\n    return false;\r\n  };\r\n\r\n  getLevel = (evolution, exp) => {\r\n    return Math.floor(\r\n      Math.log((exp / this.getFirstLevel(evolution)) * (growth - 1) + 1) /\r\n        Math.log(growth)\r\n    );\r\n  };\r\n\r\n  getFirstLevel = (evolution: number) => {\r\n    return baseFirstLevel * Math.pow(prestigeExpModifier, evolution);\r\n  };\r\n\r\n  removeExp = (evolution: number, level: number) => {\r\n    if (level === 10) return 0;\r\n    return Math.floor(\r\n      this.firstLevel *\r\n        Math.pow(prestigeExpModifier, evolution) *\r\n        ((Math.pow(growth, level) - 1) / (growth - 1))\r\n    );\r\n  };\r\n\r\n  getExpBonus = () => {\r\n    let num = 1;\r\n    if (this.universe === 1) {\r\n      num *= this.getExpGrowth();\r\n    }\r\n    if (this.dailyBonus > 1) {\r\n      num *= this.dailyBonus;\r\n    }\r\n    if (this.heirloomBonus > 1) {\r\n      num *= this.heirloomBonus;\r\n    }\r\n    if (this.purchasedFluffyExpBonus) {\r\n      num *= 0.25 * this.evolution + 1;\r\n    }\r\n    if (this.traps.owned > 0) {\r\n      num *= (0.15 + (this.traps.level - 1) * 0.075) * this.traps.owned + 1;\r\n    }\r\n    if (this.graphNextIce && this.iceBonus > 1) {\r\n      num *= this.iceBonus;\r\n    }\r\n    return num;\r\n  };\r\n\r\n  getUpgradeExp = (evolution: number, level: number, expInLevel: number) => {\r\n    if (level === 10) {\r\n      return expInLevel;\r\n    }\r\n    return Math.floor(\r\n      this.firstLevel *\r\n        Math.pow(prestigeExpModifier, evolution) *\r\n        ((Math.pow(growth, level + 1) - 1) / (growth - 1)) -\r\n        this.removeExp(evolution, level)\r\n    );\r\n  };\r\n\r\n  getMinZoneForExp = () => {\r\n    if (this.universe === 1) {\r\n      var zone = 301;\r\n      if (this.portal.Classy.level) zone -= this.portal.Classy.level * 3;\r\n      return Math.floor(zone);\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  getExpGrowth = () => {\r\n    if (this.universe === 2) return 1.02;\r\n    return 1.015;\r\n  };\r\n\r\n  getBaseExp = () => {\r\n    if (this.universe === 2) return 2.5;\r\n    return 50;\r\n  };\r\n\r\n  xpFromZone = (start: number, end: number) => {\r\n    const minimumZone = this.getMinZoneForExp();\r\n    // If ending before you're actually allowed to get xp then return nothing.\r\n    let mcalc1: number, mcalc2: number;\r\n\r\n    if (end < minimumZone) {\r\n      return 0;\r\n    }\r\n    // If starting before you're allowed to get xp, set start to min zone.\r\n    if (start < minimumZone) {\r\n      start = minimumZone;\r\n    }\r\n\r\n    if (this.universe === 1) {\r\n      mcalc1 =\r\n        (Math.pow(this.getExpGrowth(), end - minimumZone) - 1) /\r\n        (this.getExpGrowth() - 1);\r\n      mcalc2 =\r\n        (this.getBaseExp() + this.portal.Curious.level * 60) *\r\n        (1 + this.portal.Cunning.level * 0.25) *\r\n        this.expBonus;\r\n    } else {\r\n      mcalc1 =\r\n        (Math.pow(Math.pow(this.getExpGrowth(), 3), end) - 1) /\r\n        (Math.pow(this.getExpGrowth(), 3) - 1);\r\n      mcalc2 = this.getBaseExp() * this.expBonus;\r\n    }\r\n\r\n    let addSpireBonus = 0;\r\n\r\n    if (this.universe === 1 && this.spiresCompleted.length > 0) {\r\n      const spiresCompletedZones = this.spiresCompleted.map(\r\n        (spireNumber) => (spireNumber + 1) * 100\r\n      );\r\n\r\n      console.log(\"spiresCompletedZones\", spiresCompletedZones);\r\n\r\n      addSpireBonus = spiresCompletedZones.reduce((total, zone) => {\r\n        if (start < zone && end > zone) return total + this.spireXP(zone);\r\n\r\n        return total;\r\n      }, 0);\r\n    }\r\n\r\n    // Minus all of the previous zone xp.\r\n    if (start > minimumZone) {\r\n      return (\r\n        mcalc1 * mcalc2 + addSpireBonus - this.xpFromZone(minimumZone, start)\r\n      );\r\n    } else {\r\n      return mcalc1 * mcalc2 + addSpireBonus;\r\n    }\r\n  };\r\n\r\n  spireXP = (zone: number) => {\r\n    var reward =\r\n      (baseExp + this.portal.Curious.level * 60) *\r\n      Math.pow(this.getExpGrowth(), zone - this.getMinZoneForExp() - 1) *\r\n      (1 + this.portal.Cunning.level * 0.25);\r\n    return reward * this.expBonus * this.getExpGrowth();\r\n  };\r\n\r\n  getHeirloomValue = (\r\n    bonus: number,\r\n    universe: number,\r\n    evolution: number,\r\n    level: number,\r\n    boughtEarly: boolean\r\n  ) => {\r\n    var b = bonus / 100 + 1;\r\n    if (\r\n      universe === 2 &&\r\n      !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\r\n    )\r\n      b = (b - 1) * 0.1 + 1;\r\n    if (b > 1) {\r\n      return b;\r\n    } else if (b === 1) {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  getTableCell = (evolution: number, level: number, prevRuns?: number) => {\r\n    if (this.evolution === evolution && this.level > level) {\r\n      return 0;\r\n    }\r\n\r\n    const xpPerRun = this.displayData.xpPerRun;\r\n\r\n    const currentExp = this.evolution === evolution ? this.currentExp : 0;\r\n\r\n    const neededExpForLevel = this.getUpgradeExp(evolution, level, currentExp);\r\n\r\n    const runs = (neededExpForLevel - currentExp) / xpPerRun;\r\n    return runs + prevRuns;\r\n  };\r\n\r\n  getTableData = () => {\r\n    let evolution = this.evolution;\r\n    this.displayData.xpPerRun = Math.round(\r\n      this.xpFromZone(0, this.zoneYouPortal)\r\n    );\r\n\r\n    let data = [];\r\n\r\n    let runs = 0;\r\n\r\n    let startingLevel = this.universe === 2 ? this.level : 0;\r\n\r\n    for (let lev = startingLevel; lev < startingLevel + 10; lev++) {\r\n      runs = this.getTableCell(evolution, lev, runs);\r\n      data[lev] = [runs];\r\n    }\r\n\r\n    if (!this.atMaxEvo()) {\r\n      for (let lev = 0; lev < 10; lev++) {\r\n        runs = this.getTableCell(evolution + 1, lev, runs);\r\n        data[lev].push(runs);\r\n      }\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  updateUniverse = (universe: number) => {\r\n    this.universe = universe;\r\n    this.name = universe === 1 ? \"Fluffy\" : \"Scruffy\";\r\n\r\n    this.evolution =\r\n      universe === 1 ? this.save.fluffyPrestige : this.save.fluffyPrestige2;\r\n\r\n    this.exp = universe === 1 ? this.save.fluffyExp : this.save.fluffyExp2;\r\n\r\n    this.zoneYouPortal =\r\n      universe === 1 ? this.save.lastPortal : this.save.lastRadonPortal;\r\n\r\n    this.level = this.getLevel(this.evolution, this.exp);\r\n\r\n    this.currentExp = Math.ceil(\r\n      this.exp - this.removeExp(this.evolution, this.level)\r\n    );\r\n\r\n    this.heirloomBonus = getHeirloomValue(\r\n      this.save.heirloomBonus,\r\n      this.universe,\r\n      this.evolution,\r\n      this.level,\r\n      this.purchasedFluffyExpBonus\r\n    );\r\n\r\n    this.dailyBonus = getDailyBonus(\r\n      this.daily,\r\n      this.universe,\r\n      this.evolution,\r\n      this.level,\r\n      this.purchasedFluffyExpBonus\r\n    );\r\n  };\r\n\r\n  updateDisplayData = () => {\r\n    const neededExpForLevel = this.getUpgradeExp(this.evolution, this.level, 0);\r\n    const xpPerRun = Math.round(this.xpFromZone(0, this.zoneYouPortal));\r\n    const currentZone =\r\n      this.universe === this.save.zone[0] ? this.save.zone[1] : 0;\r\n\r\n    this.displayData = {\r\n      xpPerRun: xpPerRun,\r\n      table: this.getTableData(),\r\n      currentZone: currentZone,\r\n      percentToLevel: Number(\r\n        ((this.currentExp / neededExpForLevel) * 100).toFixed(2)\r\n      ),\r\n      bonesToLevel:\r\n        this.universe === 1\r\n          ? Math.ceil(\r\n              (neededExpForLevel - this.currentExp) / this.save.bestFluffyExp\r\n            ) * 100\r\n          : 0,\r\n      XPhr:\r\n        this.minutesPerRun > 0\r\n          ? Math.round((xpPerRun / this.minutesPerRun) * 60)\r\n          : 0,\r\n\r\n      name: this.name,\r\n    };\r\n  };\r\n\r\n  pasteSaveActions = (gameSave: GameObject) => {\r\n    this.save = {\r\n      fluffyExp: gameSave.global.fluffyExp,\r\n      fluffyExp2: gameSave.global.fluffyExp2,\r\n      fluffyPrestige: gameSave.global.fluffyPrestige,\r\n      fluffyPrestige2: gameSave.global.fluffyPrestige2,\r\n      lastPortal: gameSave.global.lastPortal,\r\n      lastRadonPortal: gameSave.global.lastRadonPortal,\r\n      bestFluffyExp: gameSave.stats.bestFluffyExp.valueTotal,\r\n      zone: [gameSave.global.universe, gameSave.global.world],\r\n      heirloomBonus: gameSave.heirlooms.Staff.FluffyExp.currentBonus,\r\n    };\r\n\r\n    this.daily = extend(true, {}, gameSave.global.dailyChallenge);\r\n    this.portal = extend(true, {}, gameSave.portal);\r\n\r\n    this.updateUniverse(gameSave.global.universe);\r\n\r\n    this.purchasedFluffyExpBonus = gameSave.talents.fluffyExp.purchased;\r\n\r\n    this.purchasedFluffyPrestigeBonus =\r\n      gameSave.talents.fluffyAbility.purchased;\r\n\r\n    this.traps = extend(true, {}, gameSave.playerSpire.traps.Knowledge);\r\n\r\n    this.iceBonus =\r\n      this.universe === 1 ? 1 + 0.0025 * gameSave.empowerments.Ice.level : 1;\r\n\r\n    this.expBonus = this.getExpBonus();\r\n\r\n    this.updateDisplayData();\r\n\r\n    console.log(this);\r\n  };\r\n\r\n  saveLocalStorage = () => {\r\n    localStorage.setItem(\r\n      \"fluffy-fluffy\",\r\n      JSON.stringify({\r\n        instantUpdating: this.instantUpdating,\r\n        minutesPerRun: this.minutesPerRun,\r\n        spiresCompleted: this.spiresCompleted,\r\n      })\r\n    );\r\n  };\r\n\r\n  getLocalStorage = () => {\r\n    let saveObj = JSON.parse(localStorage.getItem(\"fluffy-fluffy\"));\r\n\r\n    this.instantUpdating = saveObj?.instantUpdating ?? false;\r\n    this.minutesPerRun = saveObj?.minutesPerRun ?? 0;\r\n    this.spiresCompleted = saveObj?.spiresCompleted ?? [];\r\n  };\r\n\r\n  changeVar = (label: string, value: string) => {\r\n    switch (label) {\r\n      case \"Capable Level\":\r\n        this.portal.Capable.level = Number(value);\r\n        break;\r\n      case \"Cunning Level\":\r\n        this.portal.Cunning.level = Number(value);\r\n        break;\r\n      case \"Curious Level\":\r\n        this.portal.Curious.level = Number(value);\r\n        break;\r\n      case \"Classy Level\":\r\n        this.portal.Classy.level = Number(value);\r\n        break;\r\n      case \"Zone You Portal\":\r\n        this.zoneYouPortal = Number(value);\r\n        break;\r\n      case \"Daily Bonus\":\r\n        this.dailyBonus = Number(value) / 100 + 1;\r\n        this.expBonus = this.getExpBonus();\r\n        break;\r\n      case \"Heirloom Bonus\":\r\n        this.heirloomBonus = Number(value) / 100 + 1;\r\n        this.expBonus = this.getExpBonus();\r\n        break;\r\n      case \"List of Spire Clears\":\r\n        this.spiresCompleted = value.split(\",\").map(Number);\r\n        this.saveLocalStorage();\r\n        break;\r\n      case \"Knowledge Towers\":\r\n        this.traps.owned = Number(value);\r\n        break;\r\n      case \"Knowledge Level\":\r\n        this.traps.level = Number(value);\r\n        break;\r\n      case \"Minutes Per Run\":\r\n        this.minutesPerRun = Number(value);\r\n        this.saveLocalStorage();\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\nconst getHeirloomValue = (\r\n  bonus: number,\r\n  universe: number,\r\n  evolution: number,\r\n  level: number,\r\n  boughtEarly: boolean\r\n) => {\r\n  var b = bonus / 100 + 1;\r\n  if (\r\n    universe === 2 &&\r\n    !isRewardActive(\"heirloopy\", universe, evolution, level, boughtEarly)\r\n  )\r\n    b = (b - 1) * 0.1 + 1;\r\n  if (b > 1) {\r\n    return b;\r\n  } else if (b === 1) {\r\n    return 1;\r\n  }\r\n};\r\n\r\nconst getDailyBonus = (\r\n  daily: DailyMods,\r\n  universe: number,\r\n  evolution: number,\r\n  level: number,\r\n  boughtEarly: boolean\r\n) => {\r\n  if (daily.seed) {\r\n    return (\r\n      getDailyHeliumValue(\r\n        countDailyWeightDaily(daily),\r\n        isRewardActive(\"dailies\", universe, evolution, level, boughtEarly)\r\n      ) /\r\n        100 +\r\n      1\r\n    );\r\n  } else {\r\n    return 1;\r\n  }\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\nimport { fluffyInstance } from \"../../calculators/fluffy\";\r\nimport { GameObject } from \"../../calculators/GameObject\";\r\n\r\ninterface ContextType {\r\n  fluffyInstances?: { [index: number]: fluffyInstance };\r\n  anotherInstance?: () => void;\r\n  pasteSave?: (save: GameObject, index: number) => void;\r\n  getInstance?: (index: number) => fluffyInstance;\r\n  shown?: number[];\r\n}\r\n\r\nexport const FluffyContext = createContext<ContextType>({});\r\n// const initial_dailies = maybeMakeDaily(365);\r\nconst FluffyProvider = ({ children }) => {\r\n  const [fluffyInstances, setFluffyInstance] = useState({\r\n    0: new fluffyInstance(),\r\n  });\r\n\r\n  const [shown, setShown] = useState([0]);\r\n\r\n  console.log(\"fluffyInstances\", fluffyInstances);\r\n\r\n  const anotherInstance = () => {\r\n    console.log(\"clicking another instance\");\r\n    setShown((old) => [...old, old.length - 1]);\r\n    setFluffyInstance((old) => {\r\n      return { ...old, [Object.keys(old).length]: new fluffyInstance() };\r\n      // old.push(new fluffyInstance());\r\n    });\r\n    console.log(fluffyInstances);\r\n  };\r\n\r\n  const pasteSave = (save: GameObject, index: number) => {\r\n    setFluffyInstance((old) => {\r\n      old[index].pasteSaveActions(save);\r\n      return { ...old };\r\n    });\r\n\r\n    // fluffyInstances[index].pasteSaveActions(save);\r\n  };\r\n\r\n  const getInstance = (index: number): fluffyInstance => {\r\n    return fluffyInstances[index];\r\n  };\r\n\r\n  return (\r\n    <FluffyContext.Provider\r\n      value={{\r\n        fluffyInstances,\r\n        anotherInstance,\r\n        pasteSave,\r\n        getInstance,\r\n        shown,\r\n      }}\r\n    >\r\n      {children}\r\n    </FluffyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FluffyProvider;\r\n","import clsx from \"clsx\";\r\nimport React, { useState } from \"react\";\r\nimport { fluffyInstance } from \"../../calculators/fluffy\";\r\nimport Button from \"../utils/Button\";\r\nimport Input from \"../utils/Input\";\r\nimport Label from \"../utils/Label\";\r\n\r\nconst TrueFalseButton = ({\r\n  colors,\r\n  onClick,\r\n  active,\r\n}: {\r\n  colors: boolean;\r\n  onClick: () => void;\r\n  active: boolean;\r\n}) => {\r\n  const [isActive, setIsActive] = useState(active);\r\n\r\n  let colorClasses: string;\r\n\r\n  if (colors) {\r\n    if (isActive) {\r\n      colorClasses = \"bg-tier3 text-black\";\r\n    } else {\r\n      colorClasses = \"bg-tier1 text-black\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        onClick={() => {\r\n          onClick();\r\n          setIsActive((prev) => !prev);\r\n        }}\r\n        className={clsx(\r\n          colors ? colorClasses : \"bg-secondary\",\r\n          \"p-1 pl-2 text-xs border border-solid border-accent rounded shadow cursor-pointer select-none sm:text-base\"\r\n        )}\r\n      >\r\n        {isActive ? \"True\" : \"False\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MemoTrueFalseButton = React.memo(TrueFalseButton);\r\n\r\ninterface Props {\r\n  index: number;\r\n  instance: fluffyInstance;\r\n  universe: number;\r\n  renderParent: () => void;\r\n}\r\n\r\nfunction InputSection({ index, instance, universe, renderParent }: Props) {\r\n  console.log(\"rendered Input Section\", index);\r\n  // console.log(instance);\r\n\r\n  const handleInput = (e) => {\r\n    const target: HTMLInputElement = e.target;\r\n\r\n    const label = target.labels[0].innerText;\r\n    const value = target.value;\r\n\r\n    instance.changeVar(label, value);\r\n\r\n    if (instance.instantUpdating) {\r\n      instance.updateDisplayData();\r\n      renderParent();\r\n    }\r\n  };\r\n\r\n  const handleClick = (type) => {\r\n    if (type === \"Instant Updating\") {\r\n      instance.instantUpdating = !instance.instantUpdating;\r\n      instance.saveLocalStorage();\r\n    }\r\n\r\n    if (type === \"Ice\") {\r\n      instance.graphNextIce = !instance.graphNextIce;\r\n\r\n      if (instance.instantUpdating) {\r\n        instance.expBonus = instance.getExpBonus();\r\n        instance.updateDisplayData();\r\n        renderParent();\r\n      }\r\n    }\r\n\r\n    if (type === \"Calculate\") {\r\n      instance.updateDisplayData();\r\n      renderParent();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"grid gap-4 grid-cols-2 items-end mt-4 w-full\"\r\n        onChange={(e) => handleInput(e)}\r\n        key={instance.universe}\r\n      >\r\n        {/* U1 */}\r\n        {/*  Set mins and max's later */}\r\n        {instance?.name !== \"init\" && (\r\n          <>\r\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\r\n            {universe === 1 && (\r\n              <>\r\n                <Label>\r\n                  Capable Level\r\n                  <Input\r\n                    min={1}\r\n                    max={10}\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.portal?.Capable?.level || 0}\r\n                  />\r\n                </Label>\r\n                <Label>\r\n                  Cunning Level\r\n                  <Input\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.portal?.Cunning?.level || 0}\r\n                  />\r\n                </Label>\r\n\r\n                {!instance.portal.Curious.locked && (\r\n                  <Label>\r\n                    Curious Level\r\n                    <Input\r\n                      variant=\"fluffy\"\r\n                      defaultValue={instance?.portal?.Curious?.level || 0}\r\n                    />\r\n                  </Label>\r\n                )}\r\n\r\n                {!instance.portal.Classy.locked && (\r\n                  <Label>\r\n                    Classy Level\r\n                    <Input\r\n                      variant=\"fluffy\"\r\n                      defaultValue={instance?.portal?.Classy?.level || 0}\r\n                    />\r\n                  </Label>\r\n                )}\r\n              </>\r\n            )}\r\n            <Label>\r\n              Zone You Portal\r\n              <Input\r\n                min={instance.getMinZoneForExp()}\r\n                variant=\"fluffy\"\r\n                defaultValue={instance?.zoneYouPortal || 0}\r\n              />\r\n            </Label>\r\n            <Label>\r\n              Daily Bonus\r\n              <Input\r\n                variant=\"fluffy\"\r\n                defaultValue={Math.round(instance?.dailyBonus * 100) - 100 || 0}\r\n              />\r\n            </Label>\r\n            <Label>\r\n              Heirloom Bonus\r\n              <Input\r\n                variant=\"fluffy\"\r\n                defaultValue={\r\n                  Math.round(instance?.heirloomBonus * 100) - 100 || 0\r\n                }\r\n              />\r\n            </Label>\r\n            {universe === 1 && (\r\n              <Label>\r\n                List of Spire Clears\r\n                <Input defaultValue={String(instance.spiresCompleted || \"\")} />\r\n              </Label>\r\n            )}\r\n\r\n            {!instance?.traps.locked && (\r\n              <>\r\n                <Label>\r\n                  Knowledge Towers\r\n                  <Input\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.traps.owned || 0}\r\n                  />\r\n                </Label>\r\n                <Label>\r\n                  Knowledge Level\r\n                  <Input\r\n                    variant=\"fluffy\"\r\n                    defaultValue={instance?.traps.level || 0}\r\n                  />\r\n                </Label>\r\n              </>\r\n            )}\r\n\r\n            {/* This is a yes/no button */}\r\n            <Label>\r\n              Ice Enlightenment\r\n              <MemoTrueFalseButton\r\n                colors={false}\r\n                active={instance.graphNextIce}\r\n                onClick={() => {\r\n                  handleClick(\"Ice\");\r\n                }}\r\n              />\r\n            </Label>\r\n            <hr className=\"col-span-2 m-auto w-3/4 border-accent\" />\r\n\r\n            <Label>\r\n              Minutes Per Run\r\n              <Input variant=\"fluffy\" defaultValue={instance.minutesPerRun} />\r\n            </Label>\r\n\r\n            <Label>\r\n              Instant Updating\r\n              <MemoTrueFalseButton\r\n                colors={true}\r\n                active={instance.instantUpdating}\r\n                onClick={() => handleClick(\"Instant Updating\")}\r\n              />\r\n            </Label>\r\n\r\n            <Button\r\n              className=\"col-span-2 text-center\"\r\n              label=\"Calculate\"\r\n              onClick={() => handleClick(\"Calculate\")}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(InputSection, (prevProps, nextProps) => {\r\n  return prevProps.universe === nextProps.universe;\r\n});\r\n","import React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  data: {\r\n    evolution: number;\r\n    level: number;\r\n    table: number[];\r\n  };\r\n  second: boolean;\r\n  time?: number;\r\n}\r\n\r\nfunction sformat(s: number) {\r\n  if (s === 0) return 0;\r\n  var fm = [\r\n    Math.floor(s / 60 / 60 / 24), // DAYS\r\n    Math.floor(s / 60 / 60) % 24, // HOURS\r\n    Math.floor(s / 60) % 60, // MINUTES\r\n    Math.floor(s % 60), // SECONDS\r\n  ];\r\n  return fm\r\n    .map(function (v) {\r\n      return (v < 10 ? \"0\" : \"\") + v;\r\n    })\r\n    .join(\":\")\r\n    .replace(/00:/g, \"\");\r\n}\r\n\r\nfunction RunTimeTable({ data, second, time }: Props): ReactElement {\r\n  return (\r\n    <>\r\n      <div className=\"my-2 text-xl\">{`E${data.evolution}L${data.level}`}</div>\r\n      <table className=\"w-full bg-secondary border border-solid border-prpl shadow-xl\">\r\n        <thead>\r\n          <tr className=\"bg-thirdary\">\r\n            <th className=\"cell\">🍑</th>\r\n            <th className=\"cell\">{`Runs to E${data.evolution}`}</th>\r\n            {time > 0 && (\r\n              <th className=\"cell\">{`Time to E${data.evolution}`}</th>\r\n            )}\r\n            {second && (\r\n              <th className=\"cell\">{`Runs to E${data.evolution + 1}`}</th>\r\n            )}\r\n            {second && time > 0 && (\r\n              <th className=\"cell\">{`Time to E${data.evolution + 1}`}</th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.table.map((x, idx) => {\r\n            return (\r\n              <tr className=\"hover:bg-thirdary\" key={idx}>\r\n                <td className=\"cell font-bold bg-thirdary\">{`L${idx + 1}`}</td>\r\n                <td className=\"cell\">{x[0] === 0 ? \"\" : x[0].toFixed(2)}</td>\r\n                {time > 0 && (\r\n                  <td className=\"cell\">\r\n                    {x[0] === 0 ? \"\" : sformat(x[0] * time * 60)}\r\n                  </td>\r\n                )}\r\n\r\n                {x[1] !== undefined && (\r\n                  <>\r\n                    <td className=\"cell\">{x[1].toFixed(2)}</td>\r\n                    {time > 0 && (\r\n                      <td className=\"cell\">{sformat(x[1] * time * 60)}</td>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RunTimeTable;\r\n","import React, { ReactElement } from \"react\";\r\nimport { fluffyInstance } from \"../../calculators/fluffy\";\r\nimport { MemoInput as Input } from \"../utils/Input\";\r\nimport Label from \"../utils/Label\";\r\n\r\ninterface Props {\r\n  data: fluffyInstance[\"displayData\"];\r\n}\r\n\r\nfunction Stats({ data }: Props): ReactElement {\r\n  return (\r\n    <>\r\n      Extra Stats\r\n      <hr className=\"m-auto my-2 w-3/5 border-accent\" />\r\n      <div className=\"grid gap-3 grid-cols-2\">\r\n        {data.xpPerRun > 0 && (\r\n          <Label className=\"col-span-2\">\r\n            XP Per Run\r\n            <Input\r\n              value={addCommas(data.xpPerRun)}\r\n              disabled={true}\r\n              className=\"bg-thirdary\"\r\n            />\r\n          </Label>\r\n        )}\r\n        <Label className=\"col-span-2\">\r\n          Percent Of Level - {data.percentToLevel}%\r\n          <div className=\"flex w-full bg-thirdary border border-solid border-accent rounded\">\r\n            <div\r\n              className=\"flex flex-col p-1 text-xs bg-green-500 rounded sm:text-base\"\r\n              style={{ width: `${data.percentToLevel}%` }}\r\n            >\r\n              &nbsp;\r\n            </div>\r\n          </div>\r\n        </Label>\r\n        <Label>\r\n          Current Zone\r\n          <Input\r\n            value={data.currentZone}\r\n            disabled={true}\r\n            className=\"bg-thirdary\"\r\n          />\r\n        </Label>\r\n        {data.bonesToLevel > 0 && (\r\n          <Label>\r\n            Bones To Level\r\n            <Input\r\n              value={data.bonesToLevel}\r\n              disabled={true}\r\n              className=\"bg-thirdary\"\r\n            />\r\n          </Label>\r\n        )}\r\n\r\n        {data.XPhr > 0 && (\r\n          <Label className=\"col-span-2\">\r\n            {data.name} XP/hr\r\n            <Input\r\n              value={addCommas(data.XPhr)}\r\n              disabled={true}\r\n              className=\"bg-thirdary\"\r\n            />\r\n          </Label>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n\r\nfunction addCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\n\r\nfunction UniverseSwitch({\r\n  onClick,\r\n  universe,\r\n}: {\r\n  onClick: (u: number) => void;\r\n  universe: number;\r\n}) {\r\n  const handleClick = (e) => {\r\n    let clickedNumber = Number(e.target.title);\r\n    onClick(clickedNumber);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex mx-auto w-max shadow-md\">\r\n      <div\r\n        className={clsx(\r\n          universe === 1\r\n            ? \"bg-blue-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-1 text-xs border border-r-0 border-solid border-prpl rounded rounded-r-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"1\"\r\n      >\r\n        Universe 1\r\n      </div>\r\n      <div\r\n        className={clsx(\r\n          universe === 2\r\n            ? \"bg-pink-500 text-white\"\r\n            : \"bg-secondary text-primary\",\r\n          \"p-1 text-xs border border-l-0 border-solid border-prpl rounded rounded-l-none cursor-pointer select-none sm:text-base\"\r\n        )}\r\n        onClick={handleClick}\r\n        title=\"2\"\r\n      >\r\n        Universe 2\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(UniverseSwitch);\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import { fluffyInstance, handle_paste } from \"../../calculators/fluffy\";\r\n\r\n// export default function Template({ index }) {\r\n//   const [data, updateData] = useState({ ins: new fluffyInstance() });\r\n\r\n//   // const getPaste = (e) => {\r\n//   //   let save = handle_paste(e);\r\n//   //   if (save === false) return;\r\n//   //   updateData((old) => {\r\n//   //     return {\r\n//   //       ins: old.ins.updateSave(save),\r\n//   //     };\r\n//   //   });\r\n//   //   return;\r\n//   // };\r\n\r\n//   useEffect(()=>{\r\n//     return()=>{\r\n//       console.log('UNMOUNTED');\r\n//     }\r\n//   })\r\n\r\n//   return (\r\n//     <>\r\n//       <textarea\r\n//         onPaste={(e) => {\r\n//           getPaste(e);\r\n//         }}\r\n//       ></textarea>\r\n//       <p>{data.ins.currentExp}</p> - {Math.random()} <br />\r\n//     </>\r\n//   );\r\n// }\r\n\r\nimport clsx from \"clsx\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { fluffyInstance, handle_paste } from \"../../calculators/fluffy\";\r\nimport { testSave1 } from \"../../testsaves/one\";\r\nimport Button from \"../utils/Button\";\r\nimport InputSection from \"./InputSection\";\r\nimport RunTimeTable from \"./RunTimeTable\";\r\nimport Stats from \"./Stats\";\r\nimport UniverseSwitch from \"./UniverseSwitch\";\r\n\r\n// This keeps all update props.\r\n\r\nfunction SaveBox({ onPaste, save }: { onPaste: (e) => void; save?: string }) {\r\n  const [show, setShow] = useState(true);\r\n  const textRef = useRef(null);\r\n  return (\r\n    <>\r\n      {save && show && (\r\n        <Button\r\n          variant=\"small\"\r\n          className=\"col-span-2 self-center mb-4\"\r\n          onClick={() => {\r\n            textRef.current.innerText = save;\r\n            setShow(!show);\r\n          }}\r\n          label=\"Retrieve save\"\r\n        />\r\n      )}\r\n      <textarea\r\n        className=\"p-2 w-full text-sm bg-secondary border border-solid border-accent rounded outline-none shadow-md resize-none\"\r\n        onPaste={onPaste}\r\n        ref={textRef}\r\n        placeholder=\"Paste your save...\"\r\n        // defaultValue={instance?.string}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst MemoSaveBox = React.memo(SaveBox, (prevProps, nextProps) => {\r\n  return true;\r\n});\r\n\r\nfunction Template({\r\n  index,\r\n  instance,\r\n}: {\r\n  index: number;\r\n  instance: fluffyInstance;\r\n}) {\r\n  console.log(\"rendering instance\", instance);\r\n  const [update, setUpdate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!true) {\r\n      instance.pasteSaveActions(testSave1);\r\n      setUpdate(!update);\r\n    }\r\n  }, []);\r\n\r\n  if (instance.name === \"init\") {\r\n    instance.getLocalStorage();\r\n  }\r\n\r\n  const forceRefresh = useCallback(() => {\r\n    setUpdate((prev) => !prev);\r\n  }, [setUpdate]);\r\n\r\n  const changeUniverse = useCallback(\r\n    (universe: number) => {\r\n      if (universe === instance.universe) return;\r\n\r\n      instance.updateUniverse(universe);\r\n      instance.expBonus = instance.getExpBonus();\r\n      instance.updateDisplayData();\r\n      forceRefresh();\r\n    },\r\n    [forceRefresh]\r\n  );\r\n\r\n  const getPaste = (e) => {\r\n    let save = handle_paste(e);\r\n    if (save === false) return;\r\n    instance.pasteSaveActions(save.game);\r\n    instance.string = save.string;\r\n\r\n    forceRefresh();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid gap-2 grid-cols-1 content-center py-10 sm:grid-cols-2 md:gap-5 md:grid-cols-4 xl:grid-cols-10\">\r\n        {/* INPUT AREA */}\r\n        <div\r\n          className={clsx(\r\n            instance.name === \"init\"\r\n              ? \"col-span-10 justify-self-center w-1/2\"\r\n              : \"self-center xl:col-span-2 xl:col-start-2\",\r\n            \"flex flex-wrap justify-center\"\r\n          )}\r\n        >\r\n          <MemoSaveBox onPaste={getPaste} save={instance.string ?? null} />\r\n          {instance.name !== \"init\" && (\r\n            <InputSection\r\n              index={index}\r\n              instance={instance}\r\n              universe={instance.universe}\r\n              renderParent={forceRefresh}\r\n            />\r\n          )}\r\n        </div>\r\n        {instance.name !== \"init\" && (\r\n          <>\r\n            {/* TABLE AREA */}\r\n            <div className=\"text-center md:col-span-2 xl:col-span-4\">\r\n              <UniverseSwitch\r\n                universe={instance.universe}\r\n                onClick={changeUniverse}\r\n              />\r\n\r\n              <RunTimeTable\r\n                second={!instance.atMaxEvo()}\r\n                time={instance.minutesPerRun}\r\n                data={{\r\n                  evolution: instance.evolution,\r\n                  level: instance.level,\r\n                  table: instance.displayData.table,\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {/* STATS AREA */}\r\n            <div className=\"text-center sm:col-span-2 sm:mt-3 md:col-span-1 md:mt-0 xl:col-span-2\">\r\n              <div className=\"m-auto w-1/2 md:w-auto\">\r\n                <Stats data={instance.displayData} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <hr className=\"m-auto w-4/6 border-prpl shadow\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Template, (prevProps, nextProps) => {\r\n  return prevProps.index === nextProps.index;\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { FluffyContext } from \"./Context\";\r\nimport Template from \"./Template\";\r\n\r\n// interface Props {\r\n\r\n// }\r\n\r\nfunction Fluffy() {\r\n  const { fluffyInstances, anotherInstance, shown } = useContext(FluffyContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-5\">\r\n        {shown.map((x, index) => {\r\n          return (\r\n            <Template\r\n              index={index}\r\n              key={index}\r\n              instance={fluffyInstances[index]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"flex justify-center text-center\">\r\n        <div\r\n          className=\"w-32 h-32 text-primary text-9xl cursor-pointer select-none\"\r\n          onClick={() => {\r\n            anotherInstance();\r\n          }}\r\n        >\r\n          +\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Fluffy;\r\n","import clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst TITLES = { \"/fluffy\": \"Fluffy Calculator\", \"/daily\": \"Daily Seeker\" };\r\n\r\nfunction Tab({ location, current }: { location: string; current: boolean }) {\r\n  return (\r\n    <Link\r\n      to={location}\r\n      className={clsx(\r\n        current && \"text-prpl border-b-2 border-prpl\",\r\n        \"inline-block p-3 pb-1 text-base font-extrabold\"\r\n      )}\r\n    >\r\n      {TITLES[location]}\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction NavBar() {\r\n  const location: Location = useLocation();\r\n\r\n  const currentLocation = location?.pathname;\r\n\r\n  document.title = TITLES[currentLocation] || \"Fluffy Calculator\";\r\n\r\n  return (\r\n    <div className=\"width-full text-center bg-thirdary shadow-md\">\r\n      <Tab\r\n        location=\"/fluffy\"\r\n        current={currentLocation === \"/\" || currentLocation === \"/fluffy\"}\r\n      />\r\n      <Tab location=\"/daily\" current={currentLocation === \"/daily\"} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Daily from \"./components/Daily/Daily\";\r\nimport Fluffy from \"./components/Fluffy/Fluffy\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nfunction App() {\r\n  const swapTheme = (to: string) => {\r\n    if (to === \"light-theme\") {\r\n      localStorage.setItem(\"fluffy-theme\", \"light-theme\");\r\n      document.body.classList.replace(\"dark-theme\", \"light-theme\");\r\n    } else {\r\n      localStorage.setItem(\"fluffy-theme\", \"dark-theme\");\r\n      document.body.classList.replace(\"light-theme\", \"dark-theme\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    swapTheme(localStorage.getItem(\"fluffy-theme\"));\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <main>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/(fluffy|)\">\r\n            <Fluffy />\r\n          </Route>\r\n          <Route path=\"/daily\">\r\n            <Daily />\r\n          </Route>\r\n        </Switch>\r\n\r\n        <div\r\n          className=\"absolute right-0 top-0 m-1 p-1 text-primary bg-secondary border border-solid border-green-400 shadow-xl cursor-pointer select-none\"\r\n          onClick={() => {\r\n            if (document.body.classList.contains(\"light-theme\")) {\r\n              swapTheme(\"dark-theme\");\r\n            } else {\r\n              swapTheme(\"light-theme\");\r\n            }\r\n          }}\r\n        >\r\n          Swap Theme\r\n        </div>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./assets/index.css\";\r\nimport DailyProvider from \"./components/Daily/Context\";\r\nimport FluffyProvider from \"./components/Fluffy/Context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DailyProvider>\r\n      <FluffyProvider>\r\n        <App />\r\n      </FluffyProvider>\r\n    </DailyProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}